(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{916:function(a,s,t){"use strict";t.r(s);var e=t(1),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"调用步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用步骤"}},[a._v("#")]),a._v(" 调用步骤")]),a._v(" "),t("h3",{attrs:{id:"_1-获取-apiservices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-apiservices"}},[a._v("#")]),a._v(" 1. 获取 ApiServices")]),a._v(" "),t("p",[a._v("通过 "),t("code",[a._v("ApiManager.getServices()")]),a._v(" 获取 Apiservice 实例。")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ApiServices")]),a._v(" services "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ApiManager")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getServices")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),a._v(" "),t("h3",{attrs:{id:"_2-通过-apiservices-获取对应-api-的-call-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-通过-apiservices-获取对应-api-的-call-对象"}},[a._v("#")]),a._v(" 2. 通过 ApiServices 获取对应 API 的 Call 对象")]),a._v(" "),t("p",[a._v("第一步中获取到的 "),t("code",[a._v("ApiServices")]),a._v(" 是 "),t("code",[a._v("ApiServices")]),a._v(" 接口的实例化对象。\n通过调用其接口所定义的方法，获取对应网络 API 的 "),t("code",[a._v("Call")]),a._v(" 对象")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Call")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Response")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" call "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" services"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uploadMapGeoJsonCall")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" geoJsonObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("对应的网络 API 及其说明请查看相应的后端文档。")]),a._v(" "),t("h3",{attrs:{id:"_3-通过-call-对象的方法来执行任务。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-通过-call-对象的方法来执行任务。"}},[a._v("#")]),a._v(" 3. 通过 Call 对象的方法来执行任务。")]),a._v(" "),t("p",[a._v("获取到 "),t("code",[a._v("Call")]),a._v(" 对象并不意味着开始执行任务，\n需要调用 "),t("code",[a._v("Call")]),a._v(" 对象的对应方法来开启这一个网络请求任务。")]),a._v(" "),t("p",[a._v("执行 "),t("code",[a._v("Call")]),a._v(" 任务的方法有两个")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("异步方法 "),t("strong",[a._v("推荐！！")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("call"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("enqueue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CallBack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])]),a._v(" "),t("li",[t("p",[a._v("同步方法")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("call"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])]),a._v(" "),t("p",[a._v("最好通过异步方法来开启任务。")]),a._v(" "),t("h3",{attrs:{id:"_4-在-callback-中对结果进行响应。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-在-callback-中对结果进行响应。"}},[a._v("#")]),a._v(" 4. 在 CallBack 中对结果进行响应。")]),a._v(" "),t("h4",{attrs:{id:"_4-1-onresponse-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-onresponse-方法"}},[a._v("#")]),a._v(" 4.1 "),t("code",[a._v("onResponse()")]),a._v(" 方法")]),a._v(" "),t("p",[t("code",[a._v("onResponse()")]),a._v(" 方法用来处理连通网络后的返回结果，包括 200 结果和其他 5xx，4xx 结果。")]),a._v(" "),t("p",[a._v("本项目对任何可 handle 的结果均返回 200 ，\n"),t("strong",[a._v("请务必通过 body 中的 "),t("code",[a._v("isSuccess()")]),a._v(", "),t("code",[a._v("getErrorMsg()")]),a._v(" 来获取真正的网络响应状态。")])]),a._v(" "),t("h4",{attrs:{id:"_4-2-onfailure-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-onfailure-方法"}},[a._v("#")]),a._v(" 4.2. "),t("code",[a._v("onFailure()")]),a._v(" 方法")]),a._v(" "),t("p",[a._v("这个方法会回调任何的网络无法连通，body 解析错误的返回结果。")])])}),[],!1,null,null,null);s.default=n.exports}}]);