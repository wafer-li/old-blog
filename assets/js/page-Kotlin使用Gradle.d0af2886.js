(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{788:function(s,a,t){"use strict";t.r(a);var n=t(1),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1. 概述")]),s._v(" "),t("p",[s._v("一般来说，IntilliJ 会自动的给我们配置 Kotlin 的 Gradle 设置；")]),s._v(" "),t("p",[s._v("但是，有时候我们也想自己进行一些自定义的 Gradle 配置；")]),s._v(" "),t("p",[s._v("下面就来总结几个常用的配置方法")]),s._v(" "),t("h2",{attrs:{id:"_2-去除-src-中的-java-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-去除-src-中的-java-目录"}},[s._v("#")]),s._v(" 2. 去除 "),t("code",[s._v("src")]),s._v(" 中的 "),t("code",[s._v("java")]),s._v(" 目录")]),s._v(" "),t("p",[s._v("虽然说 Kotlin 经常和 Java 混着写，但是，有时候我们想写一个纯 Kotlin 程序的时候，却发现 "),t("code",[s._v("src")]),s._v(" 目录中一直存在着一个 "),t("code",[s._v("java")]),s._v(" 目录；")]),s._v(" "),t("p",[s._v("这着实激起了我的强迫症，解决方法如下：")]),s._v(" "),t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[s._v("sourceSets "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("srcDirs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'src/main/kotlin'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("srcDirs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'src/test/kotlin'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这是 gradle java 插件中常用的指定源文件位置的方法；")]),s._v(" "),t("p",[s._v("不过需要注意的是，即使我们使用的是 kotlin 插件，也要使用 "),t("code",[s._v("main.java")]),s._v("；")]),s._v(" "),t("p",[s._v("而不能使用 "),t("code",[s._v("main.kotlin")])]),s._v(" "),t("p",[s._v("这应该是因为 kotlin 插件继承了 java 插件的源文件位置设定的结果。")]),s._v(" "),t("h2",{attrs:{id:"_2-指定字节码版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-指定字节码版本"}},[s._v("#")]),s._v(" 2. 指定字节码版本")]),s._v(" "),t("p",[s._v("有时候我们想使用一些高级的语言特性，不想为低级的 JVM 编写代码；")]),s._v(" "),t("p",[s._v("这个时候就需要指定字节码版本；")]),s._v(" "),t("p",[s._v("在 java 插件中，我们可以通过 "),t("code",[s._v("sourceCompatibility")]),s._v(" 和 "),t("code",[s._v("targetCompatibility")]),s._v(" 来解决这个问题；")]),s._v(" "),t("p",[s._v("不过在 Kotlin 中，我们还有对应的 JVM 版本和语言和 API 版本可以设定（注意，仅在 Kotlin 1.1 之后可以使用）；")]),s._v(" "),t("div",{staticClass:"language-groovy line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-groovy"}},[t("code",[s._v("compileKotlin "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sourceCompatibility "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" JavaVersion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("VERSION_1_8\n    targetCompatibility "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" JavaVersion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("VERSION_1_8\n\n    kotlinOptions "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        jvmTarget "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"1.8"')]),s._v("\n        apiVersion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"1.1"')]),s._v("\n        languageVersion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"1.1"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("注意一定要在 "),t("code",[s._v("compileKotiln")]),s._v(" 中，因为这个是编译 Kotlin 时候的选项。")])])}),[],!1,null,null,null);a.default=r.exports}}]);