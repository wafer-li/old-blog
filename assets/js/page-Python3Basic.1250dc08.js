(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{823:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-注释"}},[s._v("#")]),s._v(" 1. 注释")]),s._v(" "),a("ol",[a("li",[s._v("注释以 "),a("code",[s._v("#")]),s._v(" 开头")]),s._v(" "),a("li",[s._v("以 "),a("code",[s._v("#!")]),s._v(" 开头的称为"),a("strong",[s._v("组织行")]),s._v("，表明了执行脚本的"),a("strong",[s._v("解释器")])])]),s._v(" "),a("blockquote",[a("p",[s._v("Linux/Unix 中，如果不清楚 Python 的位置，可以使用 "),a("code",[s._v("#!/usr/bin/env python")]),s._v("，"),a("code",[s._v("env")]),s._v(" 会自动寻找 Python 的解释器路径进行执行。")])]),s._v(" "),a("h2",{attrs:{id:"_2-字面意义的常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字面意义的常量"}},[s._v("#")]),s._v(" 2. 字面意义的常量")]),s._v(" "),a("p",[s._v("如同 5, 1.23, 9.25e-3 这样的"),a("strong",[s._v("数")]),s._v('，以及 "This is a string" 等'),a("strong",[s._v("字符串")]),s._v("被称作字面意义上的"),a("strong",[s._v("常量")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-数"}},[s._v("#")]),s._v(" 2.1 数")]),s._v(" "),a("p",[s._v("数的类型有三种——整数、浮点数和复数")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("2")]),s._v(" 是整数")]),s._v(" "),a("li",[a("code",[s._v("3.23")]),s._v(" 和 "),a("code",[s._v("52.3E-4")]),s._v(" 是浮点数")]),s._v(" "),a("li",[a("code",[s._v("(-5+4j)")]),s._v(" 和 "),a("code",[s._v("(2.3-4.6j)")]),s._v(" 是复数")])]),s._v(" "),a("blockquote",[a("p",[s._v("Python 3 只有一种整数类型，不区分 "),a("code",[s._v("long")]),s._v(" 和 "),a("code",[s._v("int")]),s._v("\nPython 2 中区分 "),a("code",[s._v("long")]),s._v(" 类型\n布尔型("),a("code",[s._v("bool")]),s._v(") 属于整型("),a("code",[s._v("integer")]),s._v(")的一种")])]),s._v(" "),a("h3",{attrs:{id:"_2-2-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-字符串"}},[s._v("#")]),s._v(" 2.2 字符串")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("字符串是字符的"),a("strong",[s._v("序列")]),s._v("，其编码默认为 "),a("strong",[s._v("Unicode")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("可以使用 "),a("code",[s._v('str.encode("ascii")')]),s._v(" 将字符串编码转换为 ASCII")])])]),s._v(" "),a("li",[a("p",[s._v("可以用"),a("strong",[s._v("单引号")]),s._v("和"),a("strong",[s._v("双引号")]),s._v("来指定字符串，"),a("strong",[s._v("单引号和双引号的意义完全相同")])])]),s._v(" "),a("li",[a("p",[s._v("利用"),a("strong",[s._v("三引号")]),s._v(" "),a("code",[s._v('"""')]),s._v(" 或者 "),a("code",[s._v("'''")]),s._v(" 可以指定一个"),a("strong",[s._v("多行字符串")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v("'''This is a multi-line-string. This is the first line.\nAnd this is the second line.\n\"What's your name?\" I asked.\nHe said \"Bond, James Bond.\"\n'''")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[s._v("在三引号中，可以自由使用单引号和双引号")])])]),s._v(" "),a("li",[a("p",[s._v("使用"),a("strong",[s._v("转义")]),s._v("来表示原有字符")]),s._v(" "),a("blockquote",[a("p",[s._v("例如 "),a("code",[s._v("'What's your name?'")]),s._v(" 中，由于（"),a("strong",[s._v("使用单引号界定的")]),s._v("）字符串中有单引号，会使 Python 解释出现错误，此时需要用转义来表示原有的单引号。\n正确的应该是 "),a("code",[s._v("'What\\'s your name?'")]),s._v("。\n但是，"),a("strong",[s._v("可以在用双引号界定的字符串中使用单引号。")]),s._v("\n这个也是正确的 "),a("code",[s._v('"What\'s your name?"')])])]),s._v(" "),a("blockquote",[a("p",[s._v("另外，在一行的末尾的反斜杠 "),a("code",[s._v("\\")]),s._v(" 仅仅表示下一行的字符串是上一行的"),a("strong",[s._v("继续")]),s._v("，"),a("strong",[s._v("并不增加新的行")])])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下字符串是等价的")]),s._v('\n"This '),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" the first line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\\\nThis "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" also the first line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v('"\n\n'),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is the firstline. This is also the first line."')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("原始字符串")]),s._v(" "),a("blockquote",[a("p",[s._v("当需要指定一些字符不被特殊处理时，可以使用 "),a("code",[s._v("r")]),s._v(" 或者 "),a("code",[s._v("R")]),s._v(" 附加在字符串前面指定"),a("strong",[s._v("原始字符串")]),s._v("。\n例如： "),a("code",[s._v('r"Newlines are indicated by \\n"')]),s._v("\n此时，"),a("strong",[s._v("字符串中的所有字符都不会被转义")])])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("在正则表达式使用的时候，请尽量使用原始字符串")])])])]),s._v(" "),a("li",[a("p",[s._v("字符串是"),a("strong",[s._v("不可变")]),s._v("的")])]),s._v(" "),a("li",[a("p",[s._v("字符串按字面意义连接")]),s._v(" "),a("blockquote",[a("p",[s._v("如果将两个字符串按字面意义相邻放着，会被自动转为一个字符串")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("format()")]),s._v(" 方法")]),s._v(" "),a("blockquote",[a("p",[s._v("可以使用 "),a("code",[s._v("format()")]),s._v(" 方法来通过使用其他信息构建字符串")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/python")]),s._v("\nage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\nname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Swaroop'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{0} is {1} years old'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出为")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Swaroop is 25 years old.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("也可以使用 "),a("code",[s._v("format()")]),s._v(" 进行格式化输出")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{0:.3}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.333'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"_3-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量"}},[s._v("#")]),s._v(" 3. 变量")]),s._v(" "),a("h3",{attrs:{id:"_3-1-命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-命名"}},[s._v("#")]),s._v(" 3.1 命名")]),s._v(" "),a("p",[s._v("同其他语言的变量命名无多大差别。")]),s._v(" "),a("ol",[a("li",[s._v("不允许数字开头")]),s._v(" "),a("li",[s._v("大小写敏感")])]),s._v(" "),a("h3",{attrs:{id:"_3-2-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-类型"}},[s._v("#")]),s._v(" 3.2 类型")]),s._v(" "),a("p",[s._v("Python 变量"),a("strong",[s._v("不需要声明类型")]),s._v("，但仍然是"),a("strong",[s._v("强类型")]),s._v("\n实际上，Python 的任何一切都称为"),a("strong",[s._v("对象")])]),s._v(" "),a("h2",{attrs:{id:"_4-逻辑行和物理行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-逻辑行和物理行"}},[s._v("#")]),s._v(" 4. 逻辑行和物理行")]),s._v(" "),a("p",[s._v("Python 中"),a("strong",[s._v("一个逻辑行对应一个物理行")]),s._v("，虽然 Python 也可以使用分号，但是"),a("strong",[s._v("一般不使用分号")])]),s._v(" "),a("blockquote",[a("p",[s._v("其他语言一般强制要求行尾分号，Python 不推荐分号的使用。")])]),s._v(" "),a("h2",{attrs:{id:"_5-缩进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-缩进"}},[s._v("#")]),s._v(" 5. 缩进")]),s._v(" "),a("p",[s._v("Python 有着严格的缩进区分，不能随意缩进，"),a("strong",[s._v("缩进用来标明语句块")]),s._v(" "),a("strong",[s._v("同一个语句块具有相同的缩进层次")])]),s._v(" "),a("blockquote",[a("p",[s._v("Python 使用缩进来表示代码块，"),a("strong",[s._v("不再使用花括号")])])]),s._v(" "),a("h2",{attrs:{id:"_6-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-操作符"}},[s._v("#")]),s._v(" 6. 操作符")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Python 中的 "),a("code",[s._v("//")]),s._v(" 符号表示"),a("strong",[s._v("向下取整相除")]),s._v("，而不是单行注释。注释使用 "),a("code",[s._v("#")]),s._v(" 来开头。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意这里是"),a("strong",[s._v("向下取整")]),s._v("，而不是"),a("strong",[s._v("趋零取整")])])])]),s._v(" "),a("li",[a("p",[s._v("布尔操作")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("not")]),s._v(" 表示布尔非（相当于 "),a("code",[s._v("!")]),s._v("）")]),s._v(" "),a("li",[a("code",[s._v("and")]),s._v(" 表示布尔与（相当于 "),a("code",[s._v("&&")]),s._v("）")]),s._v(" "),a("li",[a("code",[s._v("or")]),s._v(" 表示布尔或（相当于 "),a("code",[s._v("||")]),s._v("）")])]),s._v(" "),a("blockquote",[a("p",[s._v("有趣的是，不等于仍然使用 "),a("code",[s._v("!=")]),s._v(" 来表示")])])]),s._v(" "),a("li",[a("p",[s._v("相等性判别")]),s._v(" "),a("blockquote",[a("p",[s._v("Python 3 中有两种相等性判别，一种是变量相等性(equality)，另一种是实例相等性(identity)")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("is")]),s._v(" 用作判断实例相等性\n否定操作为 "),a("code",[s._v("is not")])])]),s._v(" "),a("blockquote",[a("p",[s._v("而 "),a("code",[s._v("==")]),s._v(" 用于判断变量相等性")])]),s._v(" "),a("p",[s._v("区别：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("is")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# False")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("优先级")]),s._v(" "),a("blockquote",[a("p",[s._v("在 Python 中，"),a("code",[s._v("lambda")]),s._v(" 表达式处在最高优先级，而并非布尔运算")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);