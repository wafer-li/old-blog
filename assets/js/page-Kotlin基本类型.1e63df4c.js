(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{793:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("strong",[t._v("Kotlin 中，任何事物都是对象。")])]),t._v(" "),s("h2",{attrs:{id:"_1-数字类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字类型"}},[t._v("#")]),t._v(" 1. 数字类型")]),t._v(" "),s("p",[t._v("Kotlin 中的数字类型有 "),s("code",[t._v("Double")]),t._v("、"),s("code",[t._v("Float")]),t._v("、"),s("code",[t._v("Long")]),t._v("、"),s("code",[t._v("Int")]),t._v("、"),s("code",[t._v("Short")]),t._v("、"),s("code",[t._v("Byte")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-位宽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-位宽"}},[t._v("#")]),t._v(" 1.1 位宽")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("BitWidth")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("32")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("32")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Short")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("16")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Byte")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("8")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意，在 Kotlin 中，"),s("strong",[t._v("字符不是一种数字类型")])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-字面常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-字面常量"}},[t._v("#")]),t._v(" 1.2 字面常量")]),t._v(" "),s("p",[t._v("数字类型可以有多种字面表示形式。")]),t._v(" "),s("ol",[s("li",[t._v("整数")])]),t._v(" "),s("ul",[s("li",[t._v("十进制数字 "),s("code",[t._v("123")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Long")]),t._v(" 类型通过加 "),s("code",[t._v("L")]),t._v(" 后缀实现: "),s("code",[t._v("123L")])])])]),t._v(" "),s("li",[t._v("十六进制 "),s("code",[t._v("0x0F")])]),t._v(" "),s("li",[t._v("二进制 "),s("code",[t._v("0b00001011")])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("浮点数\n"),s("ul",[s("li",[t._v("默认为 "),s("code",[t._v("Double")]),t._v(" 类型: "),s("code",[t._v("123.5")]),t._v(", "),s("code",[t._v("123.5e10")])]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("f")]),t._v(" 或者 "),s("code",[t._v("F")]),t._v(" 后缀来表示 "),s("code",[t._v("Float")]),t._v(": "),s("code",[t._v("123.5f")])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-3-表示法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-表示法"}},[t._v("#")]),t._v(" 1.3 表示法")]),t._v(" "),s("p",[t._v("Kotlin 中，任何数字都会被"),s("strong",[t._v("自动装箱")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" boxedA"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在类型后加 ? 表示一个 Nullable 对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" anotherBoxedA"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("boxedA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" anotherBoxedA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("boxedA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" anotherBoxedA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("blockquote",[s("p",[t._v("上面是一个很好的例子，由于所有的数字都会被自动装箱，所以 "),s("strong",[s("code",[t._v("boxedA")]),t._v(" 与 "),s("code",[t._v("anotherBoxedA")]),t._v(" 不一致")]),t._v("。\n但是由于两者均指向 "),s("code",[t._v("a")]),t._v("，所以保持了相等性。")])]),t._v(" "),s("blockquote",[s("p",[t._v("这里的 "),s("code",[t._v("Int")]),t._v(" 与 Java 的 "),s("code",[t._v("Integer")]),t._v(" 相同")])]),t._v(" "),s("h3",{attrs:{id:"_1-4-转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-转换"}},[t._v("#")]),t._v(" 1.4 转换")]),t._v(" "),s("p",[t._v("Kotlin 的原则之一就是尽量让事务明显化。\n所以，Kotlin "),s("strong",[t._v("禁止隐式转换")]),t._v("，就算是隐式向上转换也是不允许的。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Long"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("由于 "),s("code",[t._v("Int")]),t._v(" 不是 "),s("code",[t._v("Long")]),t._v(" 的子类，而且禁止隐式转换，所以即使 "),s("code",[t._v("b")]),t._v(" 指向了 "),s("code",[t._v("a")]),t._v("，它们也不相等。")])]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Byte "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ERROR")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("字面值会经编译器静态检查赋值给整数形式的变量，但是由于禁止隐式转换，第二个语句会产生 ERROR。")])]),t._v(" "),s("p",[t._v("需要转换时，应采用内置的转换方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("toByte()")])]),t._v(" "),s("li",[s("code",[t._v("toShort()")])]),t._v(" "),s("li",[s("code",[t._v("toInt()")])]),t._v(" "),s("li",[s("code",[t._v("toLong()")])]),t._v(" "),s("li",[s("code",[t._v("toFloat()")])]),t._v(" "),s("li",[s("code",[t._v("toDouble()")])]),t._v(" "),s("li",[s("code",[t._v("toChar()")])])]),t._v(" "),s("h3",{attrs:{id:"_1-5-位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-位运算符"}},[t._v("#")]),t._v(" 1.5 位运算符")]),t._v(" "),s("p",[t._v("Kotlin 支持全套 Java 的普通数字运算符。\n但关于位运算符则稍有不同，Kotlin 采用"),s("strong",[t._v("单词型")]),t._v("而非 Java 的"),s("strong",[t._v("符号型")]),t._v("位运算符。")]),t._v(" "),s("p",[t._v("下面是 Kotlin 的位运算符列表")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("shl(bits)")]),t._v(" => 位左移，相当于 Java 的 "),s("code",[t._v("<<")])]),t._v(" "),s("li",[s("code",[t._v("shr(bits)")]),t._v(" => 位右移，相当于 Java 的 "),s("code",[t._v(">>")])]),t._v(" "),s("li",[s("code",[t._v("ushr(bits)")]),t._v(" => 无符号数右移，相当于 Java 的 "),s("code",[t._v(">>>")])]),t._v(" "),s("li",[s("code",[t._v("and(bits)")]),t._v(" => 按位取与操作，相当于 Java 的 "),s("code",[t._v("&")])]),t._v(" "),s("li",[s("code",[t._v("or(bits)")]),t._v(" => 按位取或操作，相当于 Java 的 "),s("code",[t._v("|")])]),t._v(" "),s("li",[s("code",[t._v("xor(bits)")]),t._v(" => 按位取异或操作，相当于 Java 的 "),s("code",[t._v("^")])]),t._v(" "),s("li",[s("code",[t._v("inv()")]),t._v(" => 按位取反操作，相当于 Java 的 "),s("code",[t._v("~")])])]),t._v(" "),s("h2",{attrs:{id:"_2-字符类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符类型"}},[t._v("#")]),t._v(" 2. 字符类型")]),t._v(" "),s("p",[t._v("字符类型使用 "),s("code",[t._v("Char")]),t._v(" 来表示，"),s("strong",[t._v("字符不是数字")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ERROR")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("字符使用单引号括起来"),s("code",[t._v("'1'")]),t._v("，反斜杠 "),s("code",[t._v("\\")]),t._v(" 表示转义，转义字符和 Java 相同。")]),t._v(" "),s("p",[t._v("和数字类型一样，字符类型也被自动装箱，保持相等性，而不保持一致性。")]),t._v(" "),s("h2",{attrs:{id:"_3-布尔类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-布尔类型"}},[t._v("#")]),t._v(" 3. 布尔类型")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("Boolean")]),t._v(" 来表示布尔类型，布尔类型有两个值，"),s("code",[t._v("true")]),t._v(" 和 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("p",[t._v("内置的逻辑布尔操作与 Java 相同。")]),t._v(" "),s("h2",{attrs:{id:"_4-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组"}},[t._v("#")]),t._v(" 4. 数组")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("Array")]),t._v(" 表示数组，这是一个泛型类，类似于 Java 中的 "),s("code",[t._v("ArrayList<T>")]),t._v("，但并不完全相同。")]),t._v(" "),s("p",[t._v("数组是 "),s("strong",[t._v("invariant")]),t._v(" 的，也就是说不能把 "),s("code",[t._v("Array<String>")]),t._v(" 的数组赋予 "),s("code",[t._v("Array<Any>")]),t._v(" 的实例，这会产生一个"),s("strong",[t._v("runtime failure")])]),t._v(" "),s("blockquote",[s("p",[t._v("Kotlin 同样拥有 "),s("code",[t._v("List")]),t._v(" 和 "),s("code",[t._v("ArrayList")]),t._v(" 类型，在 JVM 上，"),s("code",[t._v("Array")]),t._v(" 会被替换成 Java array。")])]),t._v(" "),s("blockquote",[s("p",[t._v("所以，事实上 "),s("code",[t._v("Array")]),t._v(" 只是")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建数组"}},[t._v("#")]),t._v(" 4.1 创建数组")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("arrayOf()")]),t._v(" 创建数组。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" array "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" nullArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrayOfNulls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array with 5 null elements")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("注意变量具有自动推断功能，类似 C++ 中的 "),s("code",[t._v("auto")])])]),t._v(" "),s("p",[t._v("也可以使用 "),s("code",[t._v("Array()")]),t._v(" 创建数组。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Crates an Array<String> with values")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["0", "1", "4", "9", "16"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" asc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("Kotlin 内置了一些特定的数组类型，如 "),s("code",[t._v("IntArray")]),t._v(", "),s("code",[t._v("ByteArray")]),t._v(" 等。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IntArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intArrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_4-2-访问数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-访问数组"}},[t._v("#")]),t._v(" 4.2 访问数组")]),t._v(" "),s("p",[s("code",[t._v("Array")]),t._v(" 内置了 "),s("code",[t._v("get()")]),t._v(" 和 "),s("code",[t._v("set()")]),t._v(" 方法和 "),s("code",[t._v("size")]),t._v(" 属性。\n但是也支持使用方括号进行访问的操作 "),s("code",[t._v("[]")])]),t._v(" "),s("h3",{attrs:{id:"_4-3-多维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-多维数组"}},[t._v("#")]),t._v(" 4.3 多维数组")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" int2d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IntArray"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nint2d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intArrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intArrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("intArrayOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"_5-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串"}},[t._v("#")]),t._v(" 5. 字符串")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("String")]),t._v(" 来表示字符串。与 Java 一样，字符串是一个不可变对象。")]),t._v(" "),s("h3",{attrs:{id:"_5-1-相对-java-增加的新特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-相对-java-增加的新特性"}},[t._v("#")]),t._v(" 5.1 相对 Java 增加的新特性")]),t._v(" "),s("p",[t._v("与 Java 不同的是，Kotlin 支持使用方括号 "),s("code",[t._v("[]")]),t._v(" 来获取字符串中的字符，同时也支持对字符串字符进行遍历。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_5-2-raw-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-raw-string"}},[t._v("#")]),t._v(" 5.2 raw string")]),t._v(" "),s("p",[t._v("此外，Kotlin 还吸收了 Python 的多行字符串特性，使用三个双引号来表示一个 "),s("strong",[t._v("raw string")]),t._v("，raw string 不接受转义，其中任何的字符都是字面字符。")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" rawString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('"""\n    This is a raw string.\n    \\n and \\t will be displayed as\n    its literal stirng.\n"""')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"_5-3-字符串模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-字符串模板"}},[t._v("#")]),t._v(" 5.3 字符串模板")]),t._v(" "),s("p",[t._v("Kotlin 字符串具有模板功能，使用 "),s("code",[t._v("$")]),t._v(" 来指定参数\n例如：")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i = '),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$i")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// evaluates to "i = 10"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("也可以使用花括号 "),s("code",[t._v("{}")]),t._v(" 来获取"),s("strong",[t._v("对象的属性")]),t._v("填充到字符串中。\n例如：")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$s")]),t._v(".lenth is "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lenth"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  evaluates to "abc.length is 3"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("需要注意的是，字符串的模板功能不仅可以在普通字符串中使用，同时"),s("strong",[t._v("也可以在 raw string 中使用。")])]),t._v(" "),s("p",[t._v("此时，如果需要表示 "),s("code",[t._v("$")]),t._v(" 美元符号，必须使用以下表达式：")]),t._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token raw-string string"}},[t._v('"""\n'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$'")]),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('9.99\n"""')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("这里使用双引号"),s("code",[t._v('${"$"}')]),t._v("也是可以的，模板引用一个字面量时，结果就是它本身。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);