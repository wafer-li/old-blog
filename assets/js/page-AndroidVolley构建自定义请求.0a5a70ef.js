(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{892:function(s,e,n){"use strict";n.r(e);var a=n(1),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[s._v("#")]),s._v(" 1. 介绍")]),s._v(" "),n("p",[s._v("Volley 提供了基本的 "),n("code",[s._v("StringRequest")]),s._v("，"),n("code",[s._v("JsonObjectRequest")]),s._v(" 和 "),n("code",[s._v("JsonArrayRequest")]),s._v(" 来满足字符串请求和 JSON 请求。")]),s._v(" "),n("p",[s._v("但是有时候这可能还不能满足我们对网络通信的需求。\n比如说使用 "),n("code",[s._v("Gson")]),s._v(" 库来自动的对响应的 JSON 进行解析等。")]),s._v(" "),n("p",[s._v("此时就需要构建自定义的 Volley 请求。")]),s._v(" "),n("h2",{attrs:{id:"_2-基本步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本步骤"}},[s._v("#")]),s._v(" 2. 基本步骤")]),s._v(" "),n("h3",{attrs:{id:"_2-1-继承-request-t-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-继承-request-t-类"}},[s._v("#")]),s._v(" 2.1 继承 "),n("code",[s._v("Request<T>")]),s._v(" 类")]),s._v(" "),n("p",[s._v("自定义请求首先是通过继承基本的 "),n("code",[s._v("Request<T>")]),s._v(" 类来实现的。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public class GsonRequst<T> extends Requst<T> {\n    // class body\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"_2-2-实现构造器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实现构造器"}},[s._v("#")]),s._v(" 2.2 实现构造器")]),s._v(" "),n("p",[s._v("然后，我们要实现构造器满足基本的 Request 的构造方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public GsonRequest(String url, Class<T> clazz,\n                    Response.Listener<T> listener,\n                    Response.ErrorListener errorListener) {\n\n    // Fulfill the super constructor\n    super(Method.GET, url, errorListener);\n\n    this.clazz = clazz;\n    this.listener = listenr;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("当然，这里作为一个 "),n("code",[s._v("GsonRequest")]),s._v("，仅仅要求满足父类的构造参数是不够的，我们还要指定 Gson 转换的 class 类型，以及必要的 Response Listener")]),s._v(" "),n("h3",{attrs:{id:"_2-3-重载必要方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-重载必要方法"}},[s._v("#")]),s._v(" 2.3 重载必要方法")]),s._v(" "),n("p",[s._v("为了实现 "),n("code",[s._v("GsonRequest")]),s._v(" 我们要重载必要的方法\n"),n("code",[s._v("parseNetworkResponse()")]),s._v(" 和 "),n("code",[s._v("deliverNetworkResponse()")])]),s._v(" "),n("ol",[n("li",[n("p",[s._v("重载 "),n("code",[s._v("parseNetworkResponse(Response response)")])]),s._v(" "),n("p",[s._v("顾名思义，这个方法是用来解析网络的回复的，对于我们的 "),n("code",[s._v("GsonRequest")]),s._v("，我们首先要将网络的回复（"),n("strong",[s._v("二进制流")]),s._v("）转换成 JSON，然后由 Gson 解析成相应的类。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Override\nprotected Response<T> parseNetworkResponse(\n        NetworkResponse response) {\n    try {\n        String json = new String(response.data,\n        HttpHeaderParser.parseCharset(response.headers));\n        return Response.success(gson.fromJson(json, clazz),\n                HttpHeaderParser.parseCacheHeaders(response));\n    }\n    // handle errors\n    ...\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("重载 "),n("code",[s._v("deliverNetworkResponse(T response)")])]),s._v(" "),n("p",[s._v("这个方法是将 "),n("code",[s._v("parseNetworkResponse()")]),s._v(" 的"),n("strong",[s._v("解析结果")]),s._v("发送给我们的 Response listener 的。\n所以，代码较为简单，直接把解析出来的 "),n("code",[s._v("response")]),s._v(" 传给 "),n("code",[s._v("listener")]),s._v(" 的回调方法即可。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Override\nprotected void deliverResponse(T response) {\n    listener.onResponse(response);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"_2-4-完整示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-完整示例"}},[s._v("#")]),s._v(" 2.4 完整示例")]),s._v(" "),n("p",[s._v("完整的可用代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public class GsonRequest<T> extends Request<T> {\n    private final Gson gson = new Gson();\n    private final Class<T> clazz;\n    private final Map<String, String> headers;\n    private final Listener<T> listener;\n\n    /**\n     * Make a GET request and return a parsed object from JSON.\n     *\n     * @param url URL of the request to make\n     * @param clazz Relevant class object, for Gson's reflection\n     * @param headers Map of request headers\n     */\n    public GsonRequest(String url, Class<T> clazz, Map<String, String> headers,\n            Listener<T> listener, ErrorListener errorListener) {\n        super(Method.GET, url, errorListener);\n        this.clazz = clazz;\n        this.headers = headers;\n        this.listener = listener;\n    }\n\n    @Override\n    public Map<String, String> getHeaders() throws AuthFailureError {\n        return headers != null ? headers : super.getHeaders();\n    }\n\n    @Override\n    protected void deliverResponse(T response) {\n        listener.onResponse(response);\n    }\n\n    @Override\n    protected Response<T> parseNetworkResponse(NetworkResponse response) {\n        try {\n            String json = new String(\n                    response.data,\n                    HttpHeaderParser.parseCharset(response.headers));\n            return Response.success(\n                    gson.fromJson(json, clazz),\n                    HttpHeaderParser.parseCacheHeaders(response));\n        } catch (UnsupportedEncodingException e) {\n            return Response.error(new ParseError(e));\n        } catch (JsonSyntaxException e) {\n            return Response.error(new ParseError(e));\n        }\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("h2",{attrs:{id:"_3-关于-post-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-关于-post-方法"}},[s._v("#")]),s._v(" 3. 关于 POST 方法")]),s._v(" "),n("p",[s._v("以上的例子是基于 "),n("code",[s._v("GET")]),s._v(" 方法来介绍的，如果使用 POST 方法则略有不同。")]),s._v(" "),n("p",[s._v("仍然以 "),n("code",[s._v("GsonRequest")]),s._v(" 举例子：")]),s._v(" "),n("ol",[n("li",[s._v("首先，我们需要接受一个新的参数用来承接 POST 的实例对象")]),s._v(" "),n("li",[s._v("使用 Gson 将对象序列化成 JSON 字符串")]),s._v(" "),n("li",[s._v("将 JSON 字符串转换成 Params 或者直接 POST JSON 字符串")])]),s._v(" "),n("p",[s._v("此时，我们需要重载几个新方法。")]),s._v(" "),n("h3",{attrs:{id:"_3-1-重载-getparams-或-getbody-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-重载-getparams-或-getbody-方法"}},[s._v("#")]),s._v(" 3.1 重载 "),n("code",[s._v("getParams()")]),s._v(" 或 "),n("code",[s._v("getBody()")]),s._v(" 方法")]),s._v(" "),n("p",[n("code",[s._v("getParams()")]),s._v(" 方法实质上会在 "),n("code",[s._v("getBody()")]),s._v(" 方法中"),n("strong",[s._v("被调用")]),s._v("，\n如果你只需要 POST 简单的 Params 形式("),n("code",[s._v("key=val&another_key=another_val")]),s._v(")，那么重载 "),n("code",[s._v("getParams()")]),s._v(" 方法即可。")]),s._v(" "),n("p",[s._v("但如果普通的 Params 形式无法满足需要，那么就需要重载 "),n("code",[s._v("getBody()")]),s._v(" 方法，其返回的内容会成为 HTTP POST 报文中的 Body。")]),s._v(" "),n("p",[n("strong",[s._v("注意：两个方法只能选择重载其中一个")])]),s._v(" "),n("h4",{attrs:{id:"_3-1-1-重载-getparams-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-重载-getparams-方法"}},[s._v("#")]),s._v(" 3.1.1 重载 "),n("code",[s._v("getParams()")]),s._v(" 方法")]),s._v(" "),n("p",[s._v("一般的 POST 使用，我们重载此方法即可，该方法返回类型是 "),n("code",[s._v("Map<Sting, String>")]),s._v("。")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("GsonRequest")]),s._v(" 中，我们只需要使用 "),n("code",[s._v("Gson")]),s._v(" 将需要 POST 的对象序列化成 JSON，随后将 JSON 反序列化成 Map<String, String> 即可。\n即 "),n("code",[s._v("Object -> JSON -> Map<String, String>")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Override Map<String, String> getParmas() {\n    String json = gson.toJson(mPostObject);\n\n    // Use TypeToken to avoid the unchecked cast\n    // and the floating number converted from primitive integer\n    return gson.fromJson(\n        json,\n        new TypeToken<Map<String, String>>(){}.getType());\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h4",{attrs:{id:"_3-1-2-重载-getbody-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-重载-getbody-方法"}},[s._v("#")]),s._v(" 3.1.2 重载 "),n("code",[s._v("getBody()")]),s._v(" 方法")]),s._v(" "),n("p",[s._v("如果基本的 "),n("code",[s._v("getParams()")]),s._v(" 方法不能满足需要，那么我们可以直接重载 "),n("code",[s._v("getBody()")]),s._v(" 方法来实现对 HTTP body 的高度定制。")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("GsonRequest")]),s._v(" 中，假如碰到有时需要 POST 带 "),n("code",[s._v("List")]),s._v(" 或者数组类型的对象，由于 "),n("code",[s._v("List")]),s._v(" 不能被 cast 成 "),n("code",[s._v("Map<String, String>")]),s._v(" 的类型，那么就不能使用 "),n("code",[s._v("getParams()")]),s._v(" 方法。\n应该要使用 "),n("code",[s._v("getBody()")]),s._v(" 方法。")]),s._v(" "),n("p",[s._v("注意 "),n("code",[s._v("getBody()")]),s._v(" 返回的是 "),n("code",[s._v("byte[]")]),s._v(" 类型，我们需要使用 "),n("code",[s._v("String")]),s._v(" 的 "),n("code",[s._v("getBytes()")]),s._v(" 方法来将 JSON 转换成二进制流。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Override\npublic byte[] getBody() throws AuthFailureError {\n\n    if (mPostObject != null) {\n        String postJson = gson.toJson(mPostObject);\n\n        try {\n            return postJson.getBytes(PROTOCOL_CHARSET);\n        } catch (UnsupportedEncodingException e) {\n            VolleyLog.wtf(\n                    "Unsupported Encoding while trying to get the byte of %s using %s",\n                    postJson, PROTOCOL_CHARSET);\n        }\n    }\n\n    return null;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"_3-2-重载-getbodycontenttype-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-重载-getbodycontenttype-方法"}},[s._v("#")]),s._v(" 3.2 重载 "),n("code",[s._v("getBodyContentType()")]),s._v(" 方法")]),s._v(" "),n("p",[s._v("为了我们的 POST body 能被成功解析，我们还需要重载 "),n("code",[s._v("getBodyContentType()")]),s._v(" 方法来指定我们 POST 的"),n("strong",[s._v("数据的类型")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@Override\npublic String getBodyContentType() {\n    return PROTOCOL_CONTENT_TYPE;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);