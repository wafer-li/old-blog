(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{920:function(e,t,a){"use strict";a.r(t);var s=a(1),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"_1-operating-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-operating-system"}},[e._v("#")]),e._v(" 1. Operating System")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("What does a Mordern OS do?")]),e._v(" "),a("blockquote",[a("p",[e._v("Provide abstractions\nProvide Standard Interface\nMediates Resource Usage\nConsumes Resources")])])])]),e._v(" "),a("h2",{attrs:{id:"_2-processes-and-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-processes-and-threads"}},[e._v("#")]),e._v(" 2. Processes and Threads")]),e._v(" "),a("h3",{attrs:{id:"_2-1-what-is-process-and-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-what-is-process-and-threads"}},[e._v("#")]),e._v(" 2.1 What is process and threads")]),e._v(" "),a("p",[e._v("Process is an execution stream in the context of a particular process state.\nThread is an execution stream in the context of a thread state.")]),e._v(" "),a("p",[e._v("The key difference: Multiple threads "),a("strong",[e._v("share")]),e._v(" parts of their state.")]),e._v(" "),a("p",[e._v("Allowing read write the same memory, but each thread still have own registers.")]),e._v(" "),a("p",[e._v("Reason:")]),e._v(" "),a("ol",[a("li",[e._v("The threads must corrdinate their activities very closely.")]),e._v(" "),a("li",[e._v("It is much easier to coordinate activities.")])]),e._v(" "),a("h3",{attrs:{id:"_2-2-process-state-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-process-state-information"}},[e._v("#")]),e._v(" 2.2 Process state information")]),e._v(" "),a("ol",[a("li",[e._v("Register")]),e._v(" "),a("li",[e._v("Stack")]),e._v(" "),a("li",[e._v("Memory")]),e._v(" "),a("li",[e._v("Open file tables")]),e._v(" "),a("li",[e._v("Singal management information")])]),e._v(" "),a("h3",{attrs:{id:"_2-3-multiprogramming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-multiprogramming"}},[e._v("#")]),e._v(" 2.3 Multiprogramming")]),e._v(" "),a("p",[e._v("Multiple processes at "),a("strong",[e._v("a time")]),e._v(".\nAllow system to separate out activites cleanly.")]),e._v(" "),a("h3",{attrs:{id:"_2-4-context-switch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-context-switch"}},[e._v("#")]),e._v(" 2.4 Context switch")]),e._v(" "),a("p",[e._v("Because multiprogamming, there needs to "),a("strong",[e._v("share")]),e._v(" the resource, such as CPU.")]),e._v(" "),a("p",[e._v("Therefore, OS needs the ability to switch from one process to another.\nThat is "),a("strong",[e._v("Context Switch")])]),e._v(" "),a("h3",{attrs:{id:"_2-5-pcb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-pcb"}},[e._v("#")]),e._v(" 2.5 PCB")]),e._v(" "),a("p",[e._v("The way to implement the "),a("em",[e._v("Context Switch")]),e._v(" is to "),a("strong",[e._v("save")]),e._v("  and "),a("strong",[e._v("restore")]),e._v(" the hardware state in PCB (Process Control Block).")]),e._v(" "),a("h4",{attrs:{id:"_2-5-1-pcb-depends-on-hardward"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-pcb-depends-on-hardward"}},[e._v("#")]),e._v(" 2.5.1 PCB depends on hardward")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Register")])]),e._v(" "),a("li",[a("p",[e._v("Porcessor Status Word")])]),e._v(" "),a("li",[a("p",[e._v("Memory")]),e._v(" "),a("blockquote",[a("p",[e._v("Some machine needs the Memory Management Unit("),a("strong",[e._v("MMU")]),e._v(")")])]),e._v(" "),a("blockquote",[a("p",[e._v("But the older PC switch all the process's memory "),a("strong",[e._v("out to disk")])])])])]),e._v(" "),a("h3",{attrs:{id:"_2-6-event-driven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-event-driven"}},[e._v("#")]),e._v(" 2.6 Event-driven")]),e._v(" "),a("p",[e._v("OS is fundamentally event-driven.")]),e._v(" "),a("p",[e._v("That is to wait for an event to happen, response appropriately to the event, then wait for the next event")]),e._v(" "),a("h3",{attrs:{id:"_2-7-thread-control-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-thread-control-block"}},[e._v("#")]),e._v(" 2.7 Thread Control Block")]),e._v(" "),a("p",[e._v("It is tipically "),a("strong",[e._v("register")]),e._v(".")]),e._v(" "),a("p",[e._v("Don't need to do anything to the MMU when switch threads.")]),e._v(" "),a("h3",{attrs:{id:"_2-8-each-user-process-is-backed-by-kernel-thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-each-user-process-is-backed-by-kernel-thread"}},[e._v("#")]),e._v(" 2.8 Each user process is backed by kernel thread")]),e._v(" "),a("p",[e._v("That is the OS will have a "),a("strong",[e._v("separate")]),e._v(" thread for "),a("strong",[e._v("each")]),e._v(" process.\nAnd perform the OS activities on behalf of the process.")]),e._v(" "),a("p",[e._v("Advantages:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Allow the programmer to program the actions associate with that activity as a "),a("strong",[e._v("single")]),e._v(" serial stream of actions and events")])]),e._v(" "),a("li",[a("p",[e._v("Programmer does not have to deal with the complexity of interleaving multiple activities on the same thread")])])]),e._v(" "),a("h3",{attrs:{id:"_2-9-asyncorony"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-asyncorony"}},[e._v("#")]),e._v(" 2.9 Asyncorony")])])}),[],!1,null,null,null);t.default=r.exports}}]);