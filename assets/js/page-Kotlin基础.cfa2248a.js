(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{801:function(a,t,s){"use strict";s.r(t);var r=s(1),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本语法"}},[a._v("#")]),a._v(" 1. 基本语法")]),a._v(" "),s("h3",{attrs:{id:"_1-1-变量定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-变量定义"}},[a._v("#")]),a._v(" 1.1 变量定义")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("使用 "),s("code",[a._v("val")]),a._v(" 定义"),s("strong",[a._v("常量")]),a._v("（只读）")]),a._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 类型可以被自动推断")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Int  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果没有进行变量初始化，则需要指定变量类型")]),a._v("\nc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("blockquote",[s("p",[a._v("注意，kotlin 取消了分号")])])])]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[a._v("使用 "),s("code",[a._v("var")]),a._v(" 定义变量")]),a._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])]),a._v(" "),s("h3",{attrs:{id:"_1-2-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-注释"}},[a._v("#")]),a._v(" 1.2 注释")]),a._v(" "),s("p",[a._v("与 Java 相同，单行注释使用 "),s("code",[a._v("//")]),a._v(" ，多行注释使用 "),s("code",[a._v("/* */")])]),a._v(" "),s("p",[a._v("不同的是，kotlin 中允许注释块嵌套。")]),a._v(" "),s("h2",{attrs:{id:"_2-编码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-编码规范"}},[a._v("#")]),a._v(" 2. 编码规范")]),a._v(" "),s("h3",{attrs:{id:"_2-1-命名风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-命名风格"}},[a._v("#")]),a._v(" 2.1 命名风格")]),a._v(" "),s("p",[a._v("命名风格和 Java 相同。")]),a._v(" "),s("ul",[s("li",[a._v("类名采用大驼峰")]),a._v(" "),s("li",[a._v("函数、方法、变量采用小驼峰")]),a._v(" "),s("li",[a._v("使用 4 空格缩进")]),a._v(" "),s("li",[a._v("公有方法和函数必须加上 KDoc")])]),a._v(" "),s("h3",{attrs:{id:"_2-2-关于冒号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-关于冒号"}},[a._v("#")]),a._v(" 2.2 关于冒号")]),a._v(" "),s("p",[a._v("冒号在分隔两个类型的时候，"),s("strong",[a._v("前后都要有空格")])]),a._v(" "),s("p",[a._v("其余情况，只需后有空格即可。")]),a._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" Foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("out")]),a._v(" T "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Bar "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fun")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" T\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_2-3-lambda-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-lambda-表达式"}},[a._v("#")]),a._v(" 2.3 Lambda 表达式")]),a._v(" "),s("p",[a._v("在使用 lambda 表达式时，lambda 表达式应与花括号有空格分隔。")]),a._v(" "),s("p",[a._v("lambda 表达式应尽量的短。")]),a._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[a._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("filter")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" it "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-4-关于-unit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-关于-unit"}},[a._v("#")]),a._v(" 2.4 关于 Unit")]),a._v(" "),s("p",[a._v("当一个函数返回 "),s("code",[a._v("Unit")]),a._v(" 类型时，应将其省略。")]),a._v(" "),s("p",[a._v("类似于 Java 中的返回值为 "),s("code",[a._v("void")])]),a._v(" "),s("h2",{attrs:{id:"_3-包和导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-包和导入"}},[a._v("#")]),a._v(" 3. 包和导入")]),a._v(" "),s("p",[a._v("Kotlin 中的包和导入与 Java 区别不大。")]),a._v(" "),s("p",[a._v("另外增加了 "),s("code",[a._v("as")]),a._v(" 关键字用于赋予别名给类和函数，以防出现名称冲突。\n同时，Kotlin 中没有 Java 中的 "),s("code",[a._v("import static")]),a._v(" 语句，所有的导入均使用 "),s("code",[a._v("import")]),a._v(" 进行。")])])}),[],!1,null,null,null);t.default=e.exports}}]);