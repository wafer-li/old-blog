(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{778:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1. 概述")]),s._v(" "),t("p",[s._v("△Java语言就是基于类的语言，许多术语与C++稍有区别")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("C++")]),s._v(" "),t("th",[s._v("Java")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("函数")]),s._v(" "),t("td",[s._v("方法")])]),s._v(" "),t("tr",[t("td",[s._v("构造函数")]),s._v(" "),t("td",[s._v("构造器")])]),s._v(" "),t("tr",[t("td",[s._v("析构函数")]),s._v(" "),t("td",[s._v("析构器")])]),s._v(" "),t("tr",[t("td",[s._v("类中的数据")]),s._v(" "),t("td",[s._v("实例域")])]),s._v(" "),t("tr",[t("td",[s._v("静态数据")]),s._v(" "),t("td",[s._v("静态域")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("例如 "),t("code",[s._v("String a;")]),s._v("\nC++ 称 "),t("code",[s._v("String")]),s._v(" 为类，而 "),t("code",[s._v("a")]),s._v(" 为对象，C++ 在此时就分配了内存，构建了对象\nJava 称 "),t("code",[s._v("String")]),s._v(" 为类，"),t("code",[s._v("a")]),s._v(" 为引用，而当使用 "),t("code",[s._v("new")]),s._v(" 请求，分配了空间，构建出的数据块称为对象")])]),s._v(" "),t("p",[s._v("类对象必须使用new来构建，单纯的声明类仅仅只是声明了类的引用，并没有分配空间")]),s._v(" "),t("h2",{attrs:{id:"_2-自定义类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义类"}},[s._v("#")]),s._v(" 2. 自定义类")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("一个源文件只能拥有一个 "),t("code",[s._v("public")]),s._v(" 类，且必须与文件名一致")]),s._v(" "),t("blockquote",[t("p",[s._v("通过在类的 "),t("code",[s._v("class")]),s._v(" 前缀上 "),t("code",[s._v("public")]),s._v(" 获得这一特性")])]),s._v(" "),t("blockquote",[t("p",[s._v("包含 "),t("code",[s._v("main()")]),s._v(" 方法的类才能成为启动类，每个类都可以拥有 "),t("code",[s._v("main()")]),s._v("方法\n通常用作类的普通测试")])])]),s._v(" "),t("li",[t("p",[s._v("Java不支持析构函数，反之，会自动进行垃圾回收")])]),s._v(" "),t("li",[t("p",[s._v("所有的方法都要在类的内部进行定义")]),s._v(" "),t("blockquote",[t("p",[s._v("实际上，任何一个Java程序都是从类开始的")])])]),s._v(" "),t("li",[t("p",[s._v("如果需要返回一个可变对象的引用，应该对其进行克隆（clone）")]),s._v(" "),t("blockquote",[t("p",[s._v("※这是由于变量都是一个指向对象的“类似指针的”引用，有可能会使得数据封装性遭到破坏")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("final")]),s._v(" 修饰符在使用时大多应用于不可修改的类，当应用在可变的类的时候，并不意味着类的内容不可修改")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),s._v(" hiredate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2017")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("03")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* 此时，name引用和对象都不能被修改【String类是不可变的类】\n* hiredate: 2017-03-16\n* 这里的hiredate: 2017-03-16\n*/")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("通过 "),t("code",[s._v("static")]),s._v(" 声明静态域和静态方法")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("静态域和 C++ 类中的静态变量没有什么区别")])]),s._v(" "),t("li",[t("p",[s._v("静态公有常量可以通过类名来直接调用，由于有 "),t("code",[s._v("final")]),s._v(" 限制，所以不会造成封装性破坏")]),s._v(" "),t("blockquote",[t("p",[s._v("如Math.PI就是一个静态公有变量")])]),s._v(" "),t("blockquote",[t("p",[s._v("其实也可以通过对象引用来调用，不过一般通过类名调用使得易读性更强")])]),s._v(" "),t("blockquote",[t("p",[s._v("静态方法可以通过类名和对象引用直接调用，但一般使用类名调用增强易读性\n如 Math.pow(x,y)")])])]),s._v(" "),t("li",[t("p",[s._v("静态方法只能对对象静态域实施操作，而不能对实例域实施操作")])]),s._v(" "),t("li",[t("p",[s._v("通常只有在接受外来参数和调用静态域的时候才使用静态方法")])])]),s._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[t("p",[s._v("对象的构造")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("可以直接在构造器内初始化实例域，即使是包含关系")])]),s._v(" "),t("li",[t("p",[s._v("通过使用this来实现传参和实例域同名，甚至调用另一个构造器")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" salary"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Class * "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" nextId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    nextId"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("默认将所有数值初始化为0，布尔值初始化为false，引用初始化为null")]),s._v(" "),t("blockquote",[t("p",[s._v("如果没有提供显式构造器，则系统自动生成隐式（无参）构造器完成上述工作")])]),s._v(" "),t("blockquote",[t("p",[s._v("如果提供了显式构造器，则系统将不再自动生成无参构造器，上述操作将被视为非法")])])]),s._v(" "),t("li",[t("p",[s._v("初始化块")]),s._v(" "),t("p",[s._v("※这个不常用，通常使用构造器完成工作\n可以使用一个代码块对实例域进行初始化操作")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        id  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("初始化块在所有构造器执行之前执行。\n通过标记关键字static可以对静态域进行初始化块操作")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("类的基本结构")])])]),s._v(" "),t("ul",[t("li",[s._v("数据域")]),s._v(" "),t("li",[s._v("构造器（constructor）\n"),t("ul",[t("li",[s._v("访问器（getter）")]),s._v(" "),t("li",[s._v("更改器（setter）")])])])]),s._v(" "),t("h2",{attrs:{id:"_3-方法参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-方法参数"}},[s._v("#")]),s._v(" 3. 方法参数")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("Java总是按值传参，对象引用也是一个值")])]),s._v(" "),t("li",[t("p",[s._v("方法不能修改传递给它的实参")])]),s._v(" "),t("li",[t("p",[s._v("方法可以通过调用传入对象引用的对象的方法，实现对对象的修改")])]),s._v(" "),t("li",[t("p",[s._v("方法不能让对象参数引用一个新的对象")])]),s._v(" "),t("li",[t("p",[s._v("方法能够"),t("strong",[s._v("直接访问和修改")]),s._v("相同类作为参数的对象实例的"),t("strong",[s._v("私有域")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doStuff")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Foo")]),s._v(" f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_4-包-package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-包-package"}},[s._v("#")]),s._v(" 4. 包（"),t("code",[s._v("package")]),s._v("）")]),s._v(" "),t("p",[s._v("※类似于C++的名称空间")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("通过import语句来导入Java包")])]),s._v(" "),t("li",[t("p",[s._v("添加static指令可以直接导入静态方法和静态域，使用的时候就无需使用类名来调用【UnRecommended】")])]),s._v(" "),t("li",[t("p",[s._v("通过使用包名来具体访问一个类")])]),s._v(" "),t("li",[t("p",[s._v("通过package语句来将类放入包中，通常在开头加入")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("myapp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("corejava")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("注意包名的命名要与目录树相匹配，即上述类文件必须位于 "),t("code",[s._v("com/myapp/corejava")]),s._v(" 中，否则，最终的程序将无法运行")])])]),s._v(" "),t("li",[t("p",[s._v("包作用域")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果实例域没有指定访问控制符，则这一个部分可以被同一个包的所有方法访问")]),s._v(" "),t("blockquote",[t("p",[s._v("在编写类的时候，必须为实例域添加上访问控制符")])])])])]),s._v(" "),t("li",[t("p",[s._v("类路径（※好像只有使用Shell编译才会遇到这个问题？）")])]),s._v(" "),t("li",[t("p",[s._v("javadoc文档注释")]),s._v(" "),t("ul",[t("li",[s._v("以 "),t("code",[s._v("/**")]),s._v(" 开头，以 "),t("code",[s._v("*/")]),s._v(" 结尾")]),s._v(" "),t("li",[s._v("可以使用 "),t("code",[s._v("HTML")]),s._v(" 修饰符")]),s._v(" "),t("li",[s._v("还有各种注释，这里不一一说明")])])])]),s._v(" "),t("h2",{attrs:{id:"_5-类设计技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-类设计技巧"}},[s._v("#")]),s._v(" 5. 类设计技巧")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("保证数据私有")])]),s._v(" "),t("li",[t("p",[s._v("一定要对数据初始化，可以直接提供默认值，也可以在构造器中提供")])]),s._v(" "),t("li",[t("p",[s._v("不要在类中使用过多的基本类型，可以通过一个封装类来减少使用")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" street"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" city"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" state"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("这个可以通过一个 "),t("code",[s._v("Address")]),s._v(" 类来解决")])])]),s._v(" "),t("li",[t("p",[s._v("并不是所有的数据都需要访问器和更改器")])]),s._v(" "),t("li",[t("p",[s._v("将职责过多的类进行分解")]),s._v(" "),t("blockquote",[t("p",[s._v("如果一个类能被拆分成两个或者多个独立的概念，那就进行拆分\n注意这里是概念的拆分，而不是单纯将方法拆分")])])]),s._v(" "),t("li",[t("p",[s._v("类名和方法名要能够体现它们的职责")]),s._v(" "),t("blockquote",[t("p",[s._v("类名常用一个名词或者有定语修饰的名词\n访问器使用小写的get开头\n更改器使用小写的set开头")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);