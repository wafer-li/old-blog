(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{813:function(a,t,s){"use strict";s.r(t);var e=s(1),_=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[a._v("#")]),a._v(" 1. 概述")]),a._v(" "),s("p",[a._v("Kotlin 中拥有两种相等性类型")]),a._v(" "),s("ul",[s("li",[a._v("引用相等性：两个引用是否指向同一个对象")]),a._v(" "),s("li",[a._v("结构相等性：类似 Java 中的 "),s("code",[a._v("equals()")])])]),a._v(" "),s("h2",{attrs:{id:"_2-引用相等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-引用相等性"}},[a._v("#")]),a._v(" 2. 引用相等性")]),a._v(" "),s("p",[a._v("引用相等性使用 "),s("code",[a._v("===")]),a._v("（其否定判断为 "),s("code",[a._v("!==")]),a._v("）， 来进行判别，它只判断两个引用是否指向了同一个对象。")]),a._v(" "),s("p",[s("code",[a._v("a === b")]),a._v(" 为真当且仅当 "),s("code",[a._v("a")]),a._v(" 和 "),s("code",[a._v("b")]),a._v(" 指向了同一个对象。")]),a._v(" "),s("h2",{attrs:{id:"_3-结构相等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-结构相等性"}},[a._v("#")]),a._v(" 3. 结构相等性")]),a._v(" "),s("p",[a._v("结构相等性的判断类似 Java 中的 "),s("code",[a._v("equals()")]),a._v("，\n在 Kotlin 中，使用 "),s("code",[a._v("==")]),a._v(" 操作符来进行判断（其否定为 "),s("code",[a._v("!=")]),a._v("）。")]),a._v(" "),s("p",[a._v("一个 "),s("code",[a._v("==")]),a._v(" 操作符会被转换成以下的相应代码")]),a._v(" "),s("div",{staticClass:"language-kotlin line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[a._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?:")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("也就是说，当 "),s("code",[a._v("a")]),a._v(" 非空时，它会调用 "),s("code",[a._v("equal(Any?)")]),a._v("，当 "),s("code",[a._v("a")]),a._v(" 为空时，它会检查 "),s("code",[a._v("b")]),a._v(" 是否也为空。")]),a._v(" "),s("p",[a._v("注意，在空检查时，没有必要转换你的代码，编译器会自动将 "),s("code",[a._v("a == null")]),a._v(" 优化为 "),s("code",[a._v("a === null")])])])}),[],!1,null,null,null);t.default=_.exports}}]);