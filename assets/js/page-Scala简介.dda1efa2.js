(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{830:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1. 概述")]),s._v(" "),t("p",[s._v("Scala 是高层级的，函数式，基于 JVM，完美调用 Java 的编程语言。\n其主要特点就是它是一门函数式语言。")]),s._v(" "),t("p",[s._v("语法上，Kotlin 借鉴了其大部分的语法，所以体现出和 Kotlin 非常相似的特征。")]),s._v(" "),t("p",[s._v("同时，由于基于 JVM，所以类型系统和 Java 没有多大区别。")]),s._v(" "),t("h2",{attrs:{id:"_2-什么是函数式语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是函数式语言"}},[s._v("#")]),s._v(" 2. 什么是函数式语言")]),s._v(" "),t("p",[s._v("函数式语言的两大理念：")]),s._v(" "),t("ol",[t("li",[s._v("函数也是值，可以作为参数，也可以保存在变量中，与其他类型同级")]),s._v(" "),t("li",[s._v("函数只应该接受参数输入，并输出返回值，不应该具有其他副作用")])]),s._v(" "),t("h2",{attrs:{id:"_3-没有分号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-没有分号"}},[s._v("#")]),s._v(" 3. 没有分号")]),s._v(" "),t("p",[s._v("这里需要说的一个问题是，虽然 Scala 没有分号；")]),s._v(" "),t("p",[s._v("但是当你写长表达式的时候可能会有问题：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[s._v("someLongExpression\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" someOtherExpression\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面的语句会被隐式加上分号：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[s._v("someLongExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" someOtherExpression\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这样显然是不符合我们的实际意图的，解决办法有两个：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("使用括号")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("someLongExpression\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" someOtherLongExpression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("将操作符放在行尾")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[s._v("someLongExpression "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\nsomeOtherExpression\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("p",[s._v("分号推断的规则为，除非以下情况，否则行尾将会被认为是一个分号：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("行尾由一个不能合法作为行尾的字符结束，如句点("),t("code",[s._v(".")]),s._v(") 和中缀操作符 ("),t("code",[s._v("+")]),s._v("、"),t("code",[s._v("-")]),s._v(")")])]),s._v(" "),t("li",[t("p",[s._v("下一行开始于不能作为语句开始的字")])]),s._v(" "),t("li",[t("p",[s._v("行结束于括号("),t("code",[s._v("()")]),s._v(") 和 方括号 ("),t("code",[s._v("[]")]),s._v(") 之中")]),s._v(" "),t("blockquote",[t("p",[s._v("由于括号中不能容纳多个语句，所以，它之中的行不可能是一个逻辑行")])])])]),s._v(" "),t("h2",{attrs:{id:"_4-面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-面向对象"}},[s._v("#")]),s._v(" 4. 面向对象")]),s._v(" "),t("p",[s._v("Scala 中所有东西都是 "),t("strong",[s._v("对象")]),s._v("；")]),s._v(" "),t("p",[s._v("操作符实际上是对象的 "),t("strong",[s._v("方法")])]),s._v(" "),t("h2",{attrs:{id:"_5-变量定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-变量定义"}},[s._v("#")]),s._v(" 5. 变量定义")]),s._v(" "),t("p",[s._v("语法上和 Kotlin 无多大差别")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_6-函数定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-函数定义"}},[s._v("#")]),s._v(" 6. 函数定义")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" x\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" y\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("有趣的是，Scala 中，函数定义需要一个"),t("strong",[s._v("等号")]),s._v("；")]),s._v(" "),t("p",[s._v("这意味着，函数实际上是一个 "),t("strong",[s._v("变量")]),s._v("，而函数体实际上是一个 "),t("strong",[s._v("返回值的表达式")]),s._v("。")]),s._v(" "),t("p",[s._v("同时，函数体 "),t("strong",[s._v("没有 "),t("code",[s._v("return")])]),s._v("，这主要是因为函数体是一个 "),t("strong",[s._v("表达式")]),s._v("，而一个表达式理应返回其计算得到的值。")]),s._v(" "),t("p",[s._v("这正好体现了函数式编程的思想，函数是一个值，函数体是一个表达式。")]),s._v(" "),t("h2",{attrs:{id:"_7-使用函数式风格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用函数式风格"}},[s._v("#")]),s._v(" 7. 使用函数式风格")]),s._v(" "),t("p",[s._v("Scala 程序员在解决问题时，应该优先考虑函数式风格而非指令式风格。")]),s._v(" "),t("p",[s._v("简单的判断标准有：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("尽量使用 "),t("code",[s._v("val")]),s._v(" 解决问题")]),s._v(" "),t("blockquote",[t("p",[s._v("使用 "),t("code",[s._v("var")]),s._v(" 会让你的 编码层级变低，而函数式编程的一个重要作用就是使你的视野聚焦在高层级中。")])])]),s._v(" "),t("li",[t("p",[s._v("尽量避免定义返回 "),t("code",[s._v("Unit")]),s._v(" 的函数")]),s._v(" "),t("blockquote",[t("p",[s._v("函数式编程一个理念就是函数体是表达式，而返回 "),t("code",[s._v("Unit")]),s._v(" (Java 中的 "),t("code",[s._v("void")]),s._v(") 的函数一般来说都具有 "),t("strong",[s._v("副作用")]),s._v(" (即函数做了不是生成返回值的工作)")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);