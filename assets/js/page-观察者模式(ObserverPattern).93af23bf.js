(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{860:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1. 概述")]),s._v(" "),a("p",[s._v("观察者模式，是在对象间定义一个"),a("strong",[s._v("一对多")]),s._v("的关系。")]),s._v(" "),a("p",[s._v("当“一个” 对象的改变状态，依赖它的对象都会"),a("strong",[s._v("收到通知")]),s._v("，并自动更新。")]),s._v(" "),a("p",[s._v("其中，“一个” 对象称作"),a("strong",[s._v("主题、可观察者、被观察者")]),s._v("；")]),s._v(" "),a("p",[s._v("“多个” 对象被称作"),a("strong",[s._v("观察者、倾听者、订阅者")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("这有点类似报社和读者的关系：发生新闻后，报社通过报纸来通知读者。")]),s._v(" "),a("p",[s._v("实际上就是一个典型的观察者模式。")])]),s._v(" "),a("blockquote",[a("p",[s._v("事实上，观察者模式是 JDK 乃至实际程序和库中使用得最多的设计模式。")]),s._v(" "),a("p",[s._v("基本上所有的 Java GUI 均实现了观察者模式。（也就是 "),a("code",[s._v("Listener")]),s._v("）")])]),s._v(" "),a("h2",{attrs:{id:"_2-实现方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现方式"}},[s._v("#")]),s._v(" 2. 实现方式")]),s._v(" "),a("h3",{attrs:{id:"_2-1-实现思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-实现思路"}},[s._v("#")]),s._v(" 2.1 实现思路")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("封装变化")]),s._v(" "),a("blockquote",[a("p",[s._v("观察者模式中，主题的状态和观察者的种类和数量都会变化。")]),s._v(" "),a("p",[s._v("所以，需要对观察者进行封装。")]),s._v(" "),a("p",[s._v("同理，观察者也可能订阅多个主题，所以主题也需要进行封装。")])])]),s._v(" "),a("li",[a("p",[s._v("针对接口编程，不针对实现编程")]),s._v(" "),a("blockquote",[a("p",[s._v("所以，我们使用接口，分别将主题和观察者进行封装。")]),s._v(" "),a("p",[s._v("实际上就是让各个主题实现统一的 "),a("code",[s._v("Subject")]),s._v(" 接口；观察者实现统一的 "),a("code",[s._v("Observer")]),s._v(" 接口。")])])]),s._v(" "),a("li",[a("p",[s._v("多用组合，少用继承")]),s._v(" "),a("blockquote",[a("p",[s._v("观察者模式是一个一对多的"),a("strong",[s._v("依赖关系")]),s._v("，这意味着，主题必须维护一个"),a("strong",[s._v("观察者列表")]),s._v("。")]),s._v(" "),a("p",[s._v("状态改变后，通过调用通知方法来"),a("strong",[s._v("逐个")]),s._v("通知观察者。")]),s._v(" "),a("p",[s._v("实际上，这意味着将观察者"),a("strong",[s._v("组合")]),s._v("进了主题中。")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-图解"}},[s._v("#")]),s._v(" 2.2 图解")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.plantuml.com/plantuml/png/oymhIIrAIqnELGWkJSfAJIvHgEPIK2XAJSyi1ahu9nMd5fMb5cbeWWLpyyjIKOJoyaioqofXGiL0iLgkJBY9C76maQK5AOabgM0LoJc9nSKAplbvoKMf9Qd8zYh4nsErNQ5QJq-l5eiRu18OBe7BwEa1YVJKak0IYFqA2iK83hfZi3ePrIXzVOMdhTkUx9xsRDhEPvkd0es0-S165-vbBdJV0UNGxK3egz7JGmyEBhXBK6HXeW00",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_3-新设计原则-松耦合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-新设计原则-松耦合"}},[s._v("#")]),s._v(" 3. 新设计原则——松耦合")]),s._v(" "),a("p",[a("strong",[s._v("为了交互对象之间的松耦合设计而努力！")])]),s._v(" "),a("blockquote",[a("p",[s._v("所谓的"),a("strong",[s._v("松耦合")]),s._v("，指的就是两个类、函数、模块之间相关度不高，改变其中的一个类不会造成另一个类的大幅变化。")])]),s._v(" "),a("p",[s._v("观察者模式通过"),a("strong",[s._v("接口")]),s._v("的形式来进行交互，主题可以随时增加和删除观察者列表中的观察者；")]),s._v(" "),a("p",[s._v("观察者也不需要关心主题的内容，它只需要接受主题的通知就可以了。")]),s._v(" "),a("h2",{attrs:{id:"_4-气象站例子的-uml-图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-气象站例子的-uml-图解"}},[s._v("#")]),s._v(" 4. 气象站例子的 UML 图解")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.plantuml.com/plantuml/png/bLD1JiCm4Bpx5Jw2LD8FS44jY4j5fLRYM6sJRJ5gd6YzgOX2_ewRO9FOAL8lbkoPdPtPR9Hcf0EaA3VL_XDJbesG3UmD4wJSIiAZCfRojZT8PwIx-m3EYpDU0NN1wb0xq5Yq5KBvXWu8EbPb1emXUQbCUOBw-OGvwj1areDzJNe2O-Gx0dyWBO7XGfPojxDdd4OsIPAq7JHEue4eXKUIn1v7v2tc9H9mHHVRtTDhbQjCSUtkQq9ZUjnRN5H4DikYq9Qf2cr-CtP-tHJ6pNnGsSpdJg2rahtYXe5jFfNUBBM2hvbSAJsJe3FvP8F24Ti_hoy5OGg6RzLrTGEfxOUYR0t4zQrYNQKiBwMTdjlOnmU_IsButUtxjHc7l6Xo8I4OG0X7eGRklfDak8v2-CNleAiMnxJOuHWF3OxH2NyY-AN-DpD5ZYrDiK9ZKvp8tWy0",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_5-推和拉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-推和拉"}},[s._v("#")]),s._v(" 5. 推和拉")]),s._v(" "),a("p",[s._v("实际上，主题向观察者发送通知并不只有"),a("strong",[s._v("主题向观察者推送")]),s._v("这一个方法；")]),s._v(" "),a("p",[s._v("我们还可以"),a("strong",[s._v("让观察者主动从主题拉取数据")]),s._v("。")]),s._v(" "),a("p",[s._v("它们的主要区别在于：推的通知方法包含数据，而拉的不包含，只负责传输主题的引用。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Push")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyObservers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Pull")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyObservers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("拉的方法实现起来也很方便：")]),s._v(" "),a("ol",[a("li",[s._v("首先主题提供 getter")]),s._v(" "),a("li",[s._v("随后将"),a("strong",[s._v("主题本身")]),s._v("作为参数传递给观察者即可。")])]),s._v(" "),a("p",[s._v("采用拉的好处在于，观察者种类繁多，需要的数据不尽相同，这样一来，观察者只需要获取自己感兴趣的数据即可，而不需要同时拿到一大堆自己不想要的数据。")]),s._v(" "),a("p",[s._v("书中提到")]),s._v(" "),a("blockquote",[a("p",[s._v("如果采用拉，当扩展功能的时候，就不必要更新和修改观察者的调用，而只需改变自己来允许更多的 getter 方法来取得新增的状态。")])]),s._v(" "),a("p",[s._v("这个观点固然不错，但是实际上，我们可以通过将数据"),a("strong",[s._v("封装成一个类")]),s._v("来解决调用的问题。")]),s._v(" "),a("p",[s._v("事实上，根据 OO 设计的原则，应该 "),a("strong",[s._v("Tell, Don't Ask")]),s._v(" ，所以使用"),a("strong",[s._v("推的方法会更好。")])]),s._v(" "),a("h2",{attrs:{id:"_6-java-内置的观察者模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-java-内置的观察者模式"}},[s._v("#")]),s._v(" 6. Java 内置的观察者模式")]),s._v(" "),a("p",[s._v("Java API 中内置了一个观察者模式，包含一个基本的 "),a("code",[s._v("Observer")]),s._v(" 接口和一个 "),a("code",[s._v("Observable")]),s._v(" "),a("strong",[s._v("类")]),s._v("。")]),s._v(" "),a("p",[s._v("我们可以使用 Java 的内置 API 来快速的实现观察者模式，而不需要自己再造轮子。")]),s._v(" "),a("p",[s._v("基本的类图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/wafer-li/UMLStorage/master/image/observer_java_built_in.png",alt:""}})]),s._v(" "),a("p",[s._v("其中，"),a("code",[s._v("setChanged()")]),s._v(" 方法是用来"),a("strong",[s._v("指示状态改变的")]),s._v("。在调用 "),a("code",[s._v("notifyObservers()")]),s._v(" 之前，需要先调用这个方法。")]),s._v(" "),a("p",[s._v("同时，Java 也实现了推和拉的方式。")]),s._v(" "),a("p",[s._v("不带参数的 "),a("code",[s._v("notifyObservers()")]),s._v(" 使用的是"),a("strong",[s._v("拉的方法")]),s._v("，而带参数的使用的是推。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyObservers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Objecgt")]),s._v(" arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("changed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2016")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyObservers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyObservers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"_7-java-内置观察者模式的缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-java-内置观察者模式的缺陷"}},[s._v("#")]),s._v(" 7. Java 内置观察者模式的缺陷")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("违反面对接口编程原则")]),s._v(" "),a("blockquote",[a("p",[s._v("由于 "),a("code",[s._v("Observable")]),s._v(" 是一个"),a("strong",[s._v("类")]),s._v("，并且实现了"),a("strong",[s._v("自己的通知方法")]),s._v("，我们的通知途径就被绑定在了 "),a("code",[s._v("Observable")]),s._v(" 的具体实现上，无法轻易改变。这也导致了对观察者的通知次序被绑定而无法改变。")]),s._v(" "),a("p",[s._v("同时，由于 Java 禁止多重继承，所以无法对 "),a("code",[s._v("Observable")]),s._v(" 进行复用。")])])]),s._v(" "),a("li",[a("p",[s._v("违反多用组合，少用继承")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("Observable")]),s._v("  中的 "),a("code",[s._v("setChanged()")]),s._v(" 方法是 "),a("code",[s._v("protected")]),s._v(" 的，")]),s._v(" "),a("p",[s._v("这意味着如果不继承 "),a("code",[s._v("Observable")]),s._v(" 就无法修改 "),a("code",[s._v("setChanged()")]),s._v(" 方法。")])])])]),s._v(" "),a("p",[s._v("所以，如果应用要求弹性高，那么更好的方法应该是：")]),s._v(" "),a("p",[a("strong",[s._v("自己重新造轮子！")])])])}),[],!1,null,null,null);t.default=e.exports}}]);