(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{761:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组"}},[s._v("#")]),s._v(" 1. 数组")]),s._v(" "),a("p",[s._v("使用类似 Java 的语法进行数组初始化")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" intArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" stringArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当然，数组也可以使用 "),a("code",[s._v("var")]),s._v(" 声明")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c is a int array")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-多维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-多维数组"}},[s._v("#")]),s._v(" 1.1 多维数组")]),s._v(" "),a("p",[s._v("C# 比较神奇的一点就是它有 "),a("strong",[s._v("两种")]),s._v(" 多维数组类型：矩形数组和交错数组。")]),s._v(" "),a("h4",{attrs:{id:"_1-1-1-矩形数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-矩形数组"}},[s._v("#")]),s._v(" 1.1.1 矩形数组")]),s._v(" "),a("p",[s._v("矩形数组时一个每一行长度都相等的多维数组")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6*6 的数组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" matrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_1-1-2-交错数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-交错数组"}},[s._v("#")]),s._v(" 1.1.2 交错数组")]),s._v(" "),a("p",[s._v("交错数组是 "),a("strong",[s._v("数组的数组")]),s._v("，其中包括了内部数组。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5 个不同数组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" jagArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"_1-1-3-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-区别"}},[s._v("#")]),s._v(" 1.1.3 区别")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("矩形数组是 "),a("strong",[s._v("一个数组")])])]),s._v(" "),a("li",[a("p",[s._v("交错数组是 "),a("strong",[s._v("数组的数组")]),s._v("，实际上也就是 Java 的普通多维数组")])]),s._v(" "),a("li",[a("p",[s._v("矩形数组涉及方法调用，而交错数组只涉及内存访问。")]),s._v(" "),a("blockquote",[a("p",[s._v("交错数组比矩形数组要快。")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-2-数组基类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-数组基类"}},[s._v("#")]),s._v(" 1.2 数组基类")]),s._v(" "),a("p",[s._v("数组实际上也是一个对象，可以调用基类 "),a("code",[s._v("System.Array")]),s._v(" 的静态方法来进行一些工作。")]),s._v(" "),a("p",[s._v("主要的方法有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Clear()")])]),s._v(" "),a("li",[a("code",[s._v("CopyTo()")])]),s._v(" "),a("li",[a("code",[s._v("Length")])]),s._v(" "),a("li",[a("code",[s._v("Rank")])]),s._v(" "),a("li",[a("code",[s._v("Reverse()")])]),s._v(" "),a("li",[a("code",[s._v("Sort()")])])]),s._v(" "),a("h2",{attrs:{id:"_2-枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-枚举"}},[s._v("#")]),s._v(" 2. 枚举")]),s._v(" "),a("h3",{attrs:{id:"_2-1-声明与使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-声明与使用"}},[s._v("#")]),s._v(" 2.1 声明与使用")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("enum")]),s._v(" 定义枚举。")]),s._v(" "),a("p",[s._v("默认会以 "),a("code",[s._v("int")]),s._v(" 来存储枚举值。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmpType")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n    Grunt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n    Contractor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n    VicePresident "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 101")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("可以通过 "),a("strong",[s._v("冒号")]),s._v(" ("),a("code",[s._v(":")]),s._v(") 来指定枚举储存的类型")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmpType")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n    Grunt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n    Contractor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n    VicePresident   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"_2-2-获取枚举值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-获取枚举值"}},[s._v("#")]),s._v(" 2.2 获取枚举值")]),s._v(" "),a("p",[s._v("每个枚举对象都有个 "),a("code",[s._v("ToString()")]),s._v(" 方法，可以用它获取枚举的 "),a("strong",[s._v("名字")])]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmpType")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" EmpType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "Manager"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果想获取枚举存储的变量值，那么使用强制转换即可。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[s._v("Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{0} = {1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("System.Enum")]),s._v(" 还提供了 "),a("code",[s._v("GetValues()")]),s._v(" 方法来获取枚举中的所有成员。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-注意事项"}},[s._v("#")]),s._v(" 2.3 注意事项")]),s._v(" "),a("p",[s._v("需要注意的是，"),a("code",[s._v("switch")]),s._v(" 可以接受 "),a("strong",[s._v("0")]),s._v(" 作为 "),a("strong",[s._v("枚举值")]),s._v(" 进行处理；")]),s._v(" "),a("p",[s._v("但是，对于其他的数值则不行。")]),s._v(" "),a("p",[s._v("所以最好还是使用类似 Java 的枚举使用方法。")]),s._v(" "),a("h2",{attrs:{id:"_3-结构-struct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-结构-struct"}},[s._v("#")]),s._v(" 3. 结构 (struct)")]),s._v(" "),a("p",[s._v("结构类型和类很相似，都可以具有构造函数、域和方法；同时也可以给它们附上可见性修饰符。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Point")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X = {0}, Y = {1}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("结构和类的不同点主要在于：结构是一个 "),a("strong",[s._v("值类型")]),s._v("，而类是一个 "),a("strong",[s._v("引用类型")]),s._v("。")]),s._v(" "),a("p",[s._v("下面会详细描述两种类型的不同点。")]),s._v(" "),a("p",[s._v("需要注意的是，结构在声明时必须为 "),a("strong",[s._v("每个域")]),s._v(" 赋值；或者使用 "),a("strong",[s._v("默认构造函数")]),s._v("，否则在使用结构时就会报错。")]),s._v(" "),a("h2",{attrs:{id:"_4-值类型和引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-值类型和引用类型"}},[s._v("#")]),s._v(" 4. 值类型和引用类型")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("值类型分配在栈中，引用类型分配在堆中")])]),s._v(" "),a("li",[a("p",[s._v("值类型在使用等号("),a("code",[s._v("=")]),s._v(")赋值时，对应内容的值被复制，而引用类型只复制指向对象的引用")]),s._v(" "),a("blockquote",[a("p",[s._v("即，值类型在复制时，构造出了新的对象\n而引用类型只是复制指针，并没有构造出新的对象")])])]),s._v(" "),a("li",[a("p",[s._v("基本类型和枚举、结构都是值类型")])]),s._v(" "),a("li",[a("p",[s._v("类、数组、字符串都是引用类型")])]),s._v(" "),a("li",[a("p",[s._v("结构中包含引用类型时，复制结构，只复制引用类型的引用")])]),s._v(" "),a("li",[a("p",[s._v("按值传递引用类型时，引用本身进行复制，然后传入方法中，不会改变原有的引用的指向")])]),s._v(" "),a("li",[a("p",[s._v("按引用传递引用类型时，引用本身被传入方法中，会改变原有引用的指向")])])]),s._v(" "),a("h2",{attrs:{id:"_5-可空类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-可空类型"}},[s._v("#")]),s._v(" 5. 可空类型")]),s._v(" "),a("p",[s._v("可空类型(nullable-type) 只能用于 "),a("strong",[s._v("值类型")]),s._v("。")]),s._v(" "),a("p",[s._v("它使用 "),a("code",[s._v("?")]),s._v(" 来表示一个值类型是 "),a("strong",[s._v("可以为空的")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")])]),s._v(" nullableInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这通常用于数据库编程中。")]),s._v(" "),a("p",[s._v("此语法不能用于引用类型，因为引用类型可以为空。")]),s._v(" "),a("blockquote",[a("p",[s._v("这和 Kotlin 中的 "),a("code",[s._v("?")]),s._v(" 不同，Kotlin 中不指明 "),a("code",[s._v("?")]),s._v(" 的类型都是不可空的。")])]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("??")]),s._v(" 操作符为空类型赋予初始值。")]),s._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")])]),s._v(" myData "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetIntFromDatabase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("??")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);