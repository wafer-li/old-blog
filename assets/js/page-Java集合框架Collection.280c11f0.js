(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{780:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("p",[s("code",[t._v("Collection")]),t._v(" 接口是 Java 集合框架最基本的接口；")]),t._v(" "),s("p",[t._v("它提供了基本的元素操作方法和遍历使用的迭代器；")]),t._v(" "),s("p",[t._v("同时，它还提供了关于 "),s("code",[t._v("Collection")]),t._v(" 的批量操作方法。")]),t._v(" "),s("h2",{attrs:{id:"_2-基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本操作"}},[t._v("#")]),t._v(" 2. 基本操作")]),t._v(" "),s("p",[t._v("基本的元素操作包括 "),s("code",[t._v("add()")]),t._v(" 和 "),s("code",[t._v("remove()")]),t._v("，同时也包括 "),s("code",[t._v("size()")]),t._v(" 和 "),s("code",[t._v("isEmpty()")]),t._v(" 等一系列的集合基本操作。")]),t._v(" "),s("p",[t._v("其中 "),s("code",[t._v("add()")]),t._v(" 和 "),s("code",[t._v("remove()")]),t._v(" 的返回值是 "),s("code",[t._v("boolean")]),t._v("；")]),t._v(" "),s("p",[t._v("这个布尔值用于表示增加和删除是否成功。（是否对集合本身进行了操作）")]),t._v(" "),s("h2",{attrs:{id:"_3-遍历操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-遍历操作"}},[t._v("#")]),t._v(" 3. 遍历操作")]),t._v(" "),s("p",[t._v("Java 的 Collection 遍历操作有三种：")]),t._v(" "),s("ol",[s("li",[t._v("使用迭代器 "),s("code",[t._v("Iterator")])]),t._v(" "),s("li",[t._v("使用 "),s("em",[t._v("for each")]),t._v(" 循环")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("Stream")]),t._v(" 的聚合操作(Java 8)")])]),t._v(" "),s("p",[t._v("实际上，使用 "),s("em",[t._v("for each")]),t._v(" 循环和使用迭代器是一样的；")]),t._v(" "),s("p",[s("em",[t._v("for each")]),t._v(" 可以应用于任何实现了 "),s("code",[t._v("Iterable")]),t._v(" 接口的类：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ineterface "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterable")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("em",[t._v("for each")]),t._v(" 实际上就是应用它返回的迭代器进行遍历操作。")]),t._v(" "),s("p",[t._v("关于 "),s("code",[t._v("Stream")]),t._v(" 用单独的一篇文章介绍，这里主要解析迭代器的工作。")]),t._v(" "),s("h2",{attrs:{id:"_4-迭代器的遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-迭代器的遍历"}},[t._v("#")]),t._v(" 4. 迭代器的遍历")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("其中，"),s("code",[t._v("next()")]),t._v(" 方法返回下一个元素，"),s("code",[t._v("hasNext()")]),t._v(" 方法用于检测是否到达了集合末尾。")]),t._v(" "),s("p",[t._v("当到达了集合末尾时，调用 "),s("code",[t._v("next()")]),t._v(" 会抛出 "),s("code",[t._v("NoSuchElementException")]),t._v("，所以，正确的写法是在循环时使用 "),s("code",[t._v("hasNext()")]),t._v(" 作为判断条件：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("其中，"),s("code",[t._v("Collection")]),t._v(" 接口已经扩展(extends)了 "),s("code",[t._v("Iterable")]),t._v(" 接口，所以自带 "),s("code",[t._v("iterator()")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("元素被访问的顺序取决于集合类的具体实现。")]),t._v(" "),s("p",[t._v("比较特别的是，Java 中的迭代器和 C++ 中的迭代器不一样；")]),t._v(" "),s("p",[t._v("C++ 中的迭代器是基于索引的，可以不执行查找操作就将迭代器进行移动；")]),t._v(" "),s("p",[t._v("相反，Java 中的迭代器更类似于 "),s("code",[t._v("read()")]),t._v(" 方法，迭代器的查找操作和移动操作紧密相连；")]),t._v(" "),s("p",[t._v("Java 中的迭代器更类似于是 "),s("strong",[t._v("位于两个元素之间")]),t._v("，调用 "),s("code",[t._v("next()")]),t._v(" 将越过一个元素，并返回这个元素的引用。")]),t._v(" "),s("h2",{attrs:{id:"_5-迭代器的删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-迭代器的删除"}},[t._v("#")]),t._v(" 5. 迭代器的删除")]),t._v(" "),s("p",[t._v("比较特别的是，"),s("code",[t._v("Iterator")]),t._v(" 接口还提供了一个 "),s("code",[t._v("remove()")]),t._v(" 方法；")]),t._v(" "),s("p",[t._v("它会删除 "),s("strong",[t._v("上次")]),t._v(" 调用 "),s("code",[t._v("next()")]),t._v(" 的元素；")]),t._v(" "),s("p",[t._v("也就是说，如果你想删除某个位置上的元素，你的迭代器就必须 "),s("strong",[t._v("先越过")]),t._v(" 这个元素。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\niter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//skip over the first")]),t._v("\niter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete the first")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("需要注意的是，"),s("code",[t._v("next()")]),t._v(" 和 "),s("code",[t._v("remove()")]),t._v(" 是具有依赖性的；")]),t._v(" "),s("p",[s("strong",[t._v("不能连续调用两次 "),s("code",[t._v("remove()")])]),t._v("，否则，将会抛出 "),s("code",[t._v("IllegalStateException")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("iter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\niter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("必须先调用 "),s("code",[t._v("next()")]),t._v(" 来越过将要删除的元素。")]),t._v(" "),s("h2",{attrs:{id:"_6-批量操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-批量操作"}},[t._v("#")]),t._v(" 6. 批量操作")]),t._v(" "),s("p",[t._v("Collection 同时提供了一套批量操作方法，用于对另一个集合进行操作，主要的方法有：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("containsAll()")])]),t._v(" "),s("blockquote",[s("p",[t._v("判断另一集合是否为本集合的子集\n（本集合是否完全包含了另一集合）")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("addAll()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将另一集合的所有元素加入到本集合中")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("removeAll()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将本集合中含有的 另一集合中的所有元素 从本集合中删除")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("retainAll()")])]),t._v(" "),s("blockquote",[s("p",[t._v("将本集合中 "),s("strong",[t._v("不属于")]),t._v("  另一集合的所有元素从本集合中删除\n即，将本集合改造成两个集合的 "),s("strong",[t._v("交集")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("clear()")])]),t._v(" "),s("blockquote",[s("p",[t._v("删除本集合中的所有元素")])])])]),t._v(" "),s("h2",{attrs:{id:"_7-和数组的转换操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-和数组的转换操作"}},[t._v("#")]),t._v(" 7. 和数组的转换操作")]),t._v(" "),s("p",[s("code",[t._v("Collection")]),t._v(" 存在一个 "),s("code",[t._v("toArray()")]),t._v(" 方法；")]),t._v(" "),s("p",[t._v("但是，比较坑爹的是，这个方法仅仅只返回一个 "),s("code",[t._v("Object[]")]),t._v("；")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("这显然没有什么卵用，因为 "),s("code",[t._v("Object[]")]),t._v(" 是 "),s("strong",[t._v("新构建的")]),t._v("，它不能强制转换成更为具体的数组。")]),t._v(" "),s("p",[t._v("所以，我们需要采用另一个 "),s("code",[t._v("toArray(T[] a)")]),t._v(" 方法；")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stringArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("实际上，我们可以直接向 "),s("code",[t._v("toArray()")]),t._v(" 提供一个足够大的数组：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stringArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("那么这两种写法有什么区别呢？")]),t._v(" "),s("p",[t._v("根据 JDK 文档，当数组参数的空间不够大时，它会自动重新构建一个足够大的数组进行元素转存；")]),t._v(" "),s("p",[t._v("当数组空间足够大时，"),s("code",[t._v("toArray()")]),t._v(" 就不自己构建数组了，而是直接将元素储存到数组中。")]),t._v(" "),s("p",[t._v("这样看来，写法一好像没有什么必要，毕竟都要创建数组，不如直接创建了事，何必要多出一个无用的数组呢？")]),t._v(" "),s("p",[t._v("实际上，写法二具有线程安全问题；")]),t._v(" "),s("p",[t._v("即使你使用线程安全的 "),s("code",[t._v("Collection")]),t._v("，但是当有元素在 "),s("code",[t._v("size()")]),t._v(" 和 "),s("code",[t._v("toArray()")]),t._v(" 之间被删除了，那么最终生成的数组就会包含 "),s("code",[t._v("null")]),t._v("。")]),t._v(" "),s("p",[t._v("而，写法一就可以直接避免这个问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("线程安全的 "),s("code",[t._v("Collection")]),t._v(" 只保证每个方法是线程安全的，当你调用两个以上的方法联合使用时，就不具备线程安全了。")])]),t._v(" "),s("p",[t._v("Reference: "),s("a",{attrs:{href:"http://stackoverflow.com/questions/3293946/the-easiest-way-to-transform-collection-to-array#comment66730178_3293970",target:"_blank",rel:"noopener noreferrer"}},[t._v("The easiest way to transform collection to array?"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);