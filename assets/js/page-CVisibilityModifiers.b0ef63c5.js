(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{759:function(t,e,_){"use strict";_.r(e);var v=_(1),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),_("p",[t._v("C# 的访问修饰符比 Java 多了两个 "),_("code",[t._v("internal")]),t._v(" 和 "),_("code",[t._v("protected internal")])]),t._v(" "),_("p",[t._v("默认行为也不同")]),t._v(" "),_("h2",{attrs:{id:"_2-internal"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-internal"}},[t._v("#")]),t._v(" 2. Internal")]),t._v(" "),_("p",[t._v("C# 新增的 "),_("code",[t._v("internal")]),t._v(" 访问修饰符，指的是，该类型的可见范围为 "),_("strong",[t._v("当前程序集")]),t._v("(即 "),_("code",[t._v(".dll")]),t._v(" 和 "),_("code",[t._v(".exe")]),t._v(" 中)")]),t._v(" "),_("blockquote",[_("p",[t._v("注意和 Java 的 package 级别的可见性区分，"),_("code",[t._v("internal")]),t._v(" 指示的是整个程序集的可见性。")])]),t._v(" "),_("h2",{attrs:{id:"_3-protected-internal"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-protected-internal"}},[t._v("#")]),t._v(" 3. Protected Internal")]),t._v(" "),_("p",[_("code",[t._v("protected internal")]),t._v(" 实际上是 "),_("code",[t._v("protected")]),t._v(" 和 "),_("code",[t._v("internal")]),t._v(" 的一个 "),_("code",[t._v("union")]),t._v("。")]),t._v(" "),_("p",[t._v("它指示的是，该类型在当前程序集可见 "),_("strong",[t._v("或者")]),t._v(" 在其他程序集中的派生类可见")]),t._v(" "),_("h2",{attrs:{id:"_4-修饰限制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-修饰限制"}},[t._v("#")]),t._v(" 4. 修饰限制")]),t._v(" "),_("p",[t._v("Top-level 的类型只能使用 "),_("code",[t._v("public")]),t._v(" 和 "),_("code",[t._v("internal")]),t._v(" 来修饰，如普通的类。")]),t._v(" "),_("p",[t._v("嵌套类、嵌套的数据结构可以使用其他的修饰符。")])])}),[],!1,null,null,null);e.default=a.exports}}]);