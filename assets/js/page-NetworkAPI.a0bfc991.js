(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{909:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-说明"}},[s._v("#")]),s._v(" 1. 说明")]),s._v(" "),a("p",[a("strong",[s._v("必须先看说明！！")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("所有的网络请求 API 均位于 "),a("code",[s._v("NetworkUtils")]),s._v(" 类中，以静态方法形式呈现。")])]),s._v(" "),a("li",[a("p",[s._v("API 方法包括"),a("strong",[s._v("三个参数")]),s._v("——发起请求的必要信息，一个结果回调监听器和一个错误回调监听器，并返回一个 "),a("code",[s._v("Request")]),s._v(" 对象用于"),a("strong",[s._v("取消请求")])]),s._v(" "),a("blockquote",[a("p",[s._v("如下，"),a("code",[s._v("registerInfo")]),s._v(" 是存储注册信息的对象，"),a("code",[s._v("listener")]),s._v(" 是结果监听器， "),a("code",[s._v("errorListener")]),s._v(" 是错误监听器。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Request")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegisterInfo")]),s._v(" registerInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                               "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Listener")]),s._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ErrorListener")]),s._v(" errorListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("取消请求调用 "),a("code",[s._v("Request")]),s._v(" 类的 "),a("code",[s._v("cancel()")]),s._v(" 方法即可。")])])]),s._v(" "),a("li",[a("p",[s._v("API 方法中的两个监听器需要"),a("strong",[s._v("调用者自行实现")]),s._v("对结果和错误的处理")]),s._v(" "),a("p",[s._v("如下是一个匿名类的监听器实现：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("registerInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个是结果监听器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Listener")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BaseResponse")]),s._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do with response")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个是错误监听器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ErrorListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolleyError")]),s._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Handle error")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("回调结果("),a("strong",[s._v("Response")]),s._v(")采用继承模型，所有网络结果均是或继承于"),a("code",[s._v("BaseResponse")]),s._v("，由其派生以增加相应字段。")]),s._v(" "),a("p",[s._v("即"),a("strong",[s._v("所有的回调结果都至少包含 "),a("code",[s._v("BaseResponse")]),s._v(" 的字段")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("BaseResponse")]),s._v(" 包括两个字段，"),a("code",[s._v("status")]),s._v(" 和 "),a("code",[s._v("message")]),s._v("。")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("BaseResponse\n"),a("ul",[a("li",[a("code",[s._v("status")]),s._v("("),a("strong",[s._v("boolean")]),s._v("): 用于表示请求的成功状态")]),s._v(" "),a("li",[a("code",[s._v("message")]),s._v("("),a("strong",[s._v("String")]),s._v("): 用于描述结果信息，一般来说将其直接呈现给用户即可")])])])])]),s._v(" "),a("p",[s._v("其余具有特殊相应字段的结果均继承自 "),a("code",[s._v("BaseResponse")]),s._v("，通过派生增加新字段。")]),s._v(" "),a("blockquote",[a("p",[s._v("如登陆的回调结果需要包含 token，则通过建立新的 "),a("code",[s._v("LoginResponse")]),s._v(" 继承 "),a("code",[s._v("BaseResponse")]),s._v(" ，在 "),a("code",[s._v("LoginResponse")]),s._v(" 中增加 "),a("code",[s._v("token")]),s._v(" 字段。")])]),s._v(" "),a("blockquote",[a("p",[s._v("回调结果类均存储在 "),a("code",[s._v("models.response")]),s._v(" 包中。\n关于各个 API 回调结果的说明，请参照"),a("strong",[s._v("服务器端文档")])])])]),s._v(" "),a("li",[a("p",[s._v("请通过使用 "),a("code",[s._v("VolleyErrorHelper")]),s._v(" 类来获取网络错误信息的形式来处理网络错误，"),a("strong",[s._v("不要自己处理")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("VolleyErrorHelper")]),s._v(" 类位于 "),a("code",[s._v("utils")]),s._v(" 包中。\n其中也包含了一个展示默认 Snackbar 的 "),a("code",[s._v("display()")]),s._v(" 方法")])])])]),s._v(" "),a("h2",{attrs:{id:"_2-api-列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-api-列表"}},[s._v("#")]),s._v(" 2. API 列表")]),s._v(" "),a("p",[s._v("这里只列出"),a("strong",[s._v("发起请求的必要参数")]),s._v("，剩下的两个监听器不予列出。\n返回的 "),a("code",[s._v("Request")]),s._v(" 对象同上，不予列出。")]),s._v(" "),a("h3",{attrs:{id:"_2-1-注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-注册"}},[s._v("#")]),s._v(" 2.1 注册")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RegisterInfo")]),s._v(" registerInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("registerInfo")]),s._v("：保存用户注册信息的容器类对象，仅包括用户在注册界面填写的信息。")])]),s._v(" "),a("h3",{attrs:{id:"_2-2-获取验证码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-获取验证码"}},[s._v("#")]),s._v(" 2.2 获取验证码")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAuthCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" phoneNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("phoneNumber")]),s._v("：用于获取验证码的用户手机号，要求 11 位，以 "),a("code",[s._v("1")]),s._v(" 开头。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);