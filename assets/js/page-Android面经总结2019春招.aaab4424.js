(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{934:function(v,_,E){"use strict";E.r(_);var A=E(1),e=Object(A.a)({},(function(){var v=this,_=v.$createElement,E=v._self._c||_;return E("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[E("p",[v._v("折腾了好一段时间，也算是找到了工作了，做个面经总结来告慰一下我的学生生涯")]),v._v(" "),E("h2",{attrs:{id:"_1-ihandy"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#_1-ihandy"}},[v._v("#")]),v._v(" 1. iHandy")]),v._v(" "),E("p",[v._v("为什么 Android 要设计 Intent Service？直接使用线程不就行了？")]),v._v(" "),E("blockquote",[E("p",[v._v("考点：Intent Service 和线程的区别\n答：Thread 依赖于 Activity 存在，在 Activity finish 的时候 Thread 必须终止，否则会造成内存泄漏\nIntent Service 不依赖于 Activity 存在，当 Activity 关闭之后，它依旧会继续进行，直到任务完成或者系统强制将其回收")])]),v._v(" "),E("p",[v._v("按下 App 强制停止，发生了什么？")]),v._v(" "),E("blockquote",[E("p",[v._v("调用了 forceStopPackage()")])]),v._v(" "),E("p",[v._v("跨进程单例实现")]),v._v(" "),E("blockquote",[E("p",[v._v("使用 AIDL 接口实现一个单例，然后制定一个进程存储（实现）这个单例，其他进程连接这个 Service 获取其 Binder")])]),v._v(" "),E("h2",{attrs:{id:"_2-头条"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#_2-头条"}},[v._v("#")]),v._v(" 2. 头条")]),v._v(" "),E("p",[E("a",{attrs:{href:"https://leetcode.com/problems/sort-colors/",target:"_blank",rel:"noopener noreferrer"}},[v._v("荷兰国旗问题"),E("OutboundLink")],1)]),v._v(" "),E("p",[v._v("只遍历一次的算法")]),v._v(" "),E("p",[E("img",{attrs:{src:"/images/android-面经总结/荷兰国旗算法示意图.png",alt:"荷兰国旗算法示意图"}})]),v._v(" "),E("p",[E("code",[v._v("curr")]),v._v(" 从前往后遍历：")]),v._v(" "),E("ol",[E("li",[v._v("如果遍历到白球，"),E("code",[v._v("curr++")])]),v._v(" "),E("li",[v._v("如果遍历到红球，则与 "),E("code",[v._v("red")]),v._v(" 交换，然后 "),E("code",[v._v("red++")]),v._v("，"),E("code",[v._v("curr++")])]),v._v(" "),E("li",[v._v("如果遍历到黑球，则与 "),E("code",[v._v("black")]),v._v(" 交换，"),E("code",[v._v("black--")]),v._v("，"),E("strong",[E("code",[v._v("curr")]),v._v(" 不动")])])]),v._v(" "),E("p",[E("code",[v._v("curr")]),v._v(" 表示 "),E("strong",[v._v("前面已经排好了")]),v._v("，和后面交换并不保证前面已经排好")]),v._v(" "),E("p",[v._v("HTTPS 通信流程")]),v._v(" "),E("blockquote",[E("p",[v._v("HTTPS 全称是：HTTP over TLS")])]),v._v(" "),E("Mermaid",{attrs:{id:"mermaid-382ee203","data-code":"%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E6%9C%8D%E5%8A%A1%E7%AB%AF%3A%20%E5%8F%91%E8%B5%B7%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%8D%8F%E8%AE%AE%E7%89%88%E6%9C%AC%EF%BC%8C%E6%94%AF%E6%8C%81%E7%AE%97%E6%B3%95%E5%92%8C%E9%9A%8F%E6%9C%BA%E5%87%BD%E6%95%B0%20random1%0A%E6%9C%8D%E5%8A%A1%E7%AB%AF-%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%3A%20%E7%A1%AE%E8%AE%A4%E7%89%88%E6%9C%AC%EF%BC%8C%E9%9A%8F%E6%9C%BA%E6%95%B0%20random2%20%E5%92%8C%E6%94%AF%E6%8C%81%E7%AE%97%E6%B3%95%0A%E6%9C%8D%E5%8A%A1%E7%AB%AF-%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%3A%20%E5%8F%91%E9%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%AC%E9%92%A5%E8%AF%81%E4%B9%A6%0A%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%3A%20%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6%E7%AD%BE%E5%90%8D%0A%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%3A%20%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0%20random3%20%E5%B9%B6%E9%80%9A%E8%BF%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%AC%E9%92%A5%E5%8A%A0%E5%AF%86%E7%94%9F%E6%88%90%20premaster%0A%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E6%9C%8D%E5%8A%A1%E7%AB%AF%3A%20%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%20premaster%0A%E6%9C%8D%E5%8A%A1%E7%AB%AF-%3E%E6%9C%8D%E5%8A%A1%E7%AB%AF%3A%20%E7%94%A8%E7%A7%81%E9%92%A5%E8%A7%A3%E5%AF%86%20premaster%EF%BC%8C%E8%8E%B7%E5%8F%96%20random3%0A%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E5%AE%A2%E6%88%B7%E7%AB%AF%3A%20%E4%BD%BF%E7%94%A8%20random1%20random2%20random3%20%E7%94%9F%E6%88%90%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%A7%98%E9%92%A5%0A%E6%9C%8D%E5%8A%A1%E7%AB%AF-%3E%E6%9C%8D%E5%8A%A1%E7%AB%AF%3A%20%E4%BD%BF%E7%94%A8%20random1%20random2%20random3%20%E7%94%9F%E6%88%90%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%A7%98%E9%92%A5%0A%E5%AE%A2%E6%88%B7%E7%AB%AF-%3E%E6%9C%8D%E5%8A%A1%E7%AB%AF%3A%20%E4%BD%BF%E7%94%A8%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%A7%98%E9%92%A5%E8%BF%9B%E8%A1%8C%E5%8A%A0%E5%AF%86%E9%80%9A%E4%BF%A1%0A"}}),E("p",[v._v("HTTPS 的验证过程如何防止中间人攻击？中间人偷换公钥怎么办？")]),v._v(" "),E("blockquote",[E("p",[v._v("搞清楚几个问题：")]),v._v(" "),E("ol",[E("li",[v._v("服务器 SSL 证书是怎么来的？\n-> 是从 CA 申请的，CA 向服务器下发公私钥对，并在证书中使用 CA 私钥对服务器公钥进行签名")]),v._v(" "),E("li",[v._v("客户端是如何验证的？\n-> 客户端拿到服务器公钥之后，使用 CA 公钥对签名部分进行解密，然后对比解密后的公钥是不是同一个（即签名校验）\n所以，防止中间人攻击是经过 CA 来实现的\n如果发现证书签名不一致，则说明遭受到了中间人攻击，那么就中断连接\n重点：HTTPS 防止中间人是依靠 CA 实现的，因此，并不是一定可以防止中间人攻击，如果客户系统导入了奇怪的证书，就可能会遭受到中间人攻击")])])]),v._v(" "),E("h2",{attrs:{id:"_3-珍爱网"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#_3-珍爱网"}},[v._v("#")]),v._v(" 3. 珍爱网")]),v._v(" "),E("p",[E("code",[v._v("HashMap")]),v._v(" 与 "),E("code",[v._v("ArrayList")]),v._v(" 如何扩容")]),v._v(" "),E("blockquote",[E("p",[v._v("ArrayList\n插入前先确保容量，如果不足就扩容，数组增长到 1.5 倍\n"),E("strong",[v._v("不会自动缩小")])]),v._v(" "),E("p",[v._v("HashMap")]),v._v(" "),E("ol",[E("li",[v._v("初始大小 16，扩容因子 "),E("code",[v._v("loadFactor")]),v._v(" 0.75")]),v._v(" "),E("li",[v._v("当 "),E("code",[v._v("size > capacity * loadFactor")]),v._v(" 时，就扩容 2 倍")]),v._v(" "),E("li",[v._v("数组扩容完毕之后进行 "),E("code",[v._v("rehash()")])]),v._v(" "),E("li",[v._v("HashMap 的 hash 方法为 "),E("code",[v._v("hashCode & (sizeOfArray - 1)")])]),v._v(" "),E("li",[E("a",{attrs:{href:"https://wafer.li/Interview/hashmap-%E7%9A%84-loadfactor-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF-0-75",target:"_blank",rel:"noopener noreferrer"}},[v._v("为什么是 0.75"),E("OutboundLink")],1)])])]),v._v(" "),E("p",[E("code",[v._v("HashMap")]),v._v(" 的键值对是否可以为 "),E("code",[v._v("null")])]),v._v(" "),E("blockquote",[E("p",[E("code",[v._v("HashMap")]),v._v(" 可以为 "),E("code",[v._v("null")]),v._v("(Key, Value 都可以)\n"),E("code",[v._v("HashTable")]),v._v(" 不行")])]),v._v(" "),E("p",[E("code",[v._v("HashMap")]),v._v(" 与 "),E("code",[v._v("Set")]),v._v(" 的 "),E("code",[v._v("put")]),v._v(" 有什么区别")]),v._v(" "),E("blockquote",[E("p",[E("code",[v._v("HashMap")]),v._v(" 的 "),E("code",[v._v("put")]),v._v(" 当存在相同 Key 的时候会改变原值\n"),E("code",[v._v("Set")]),v._v(" 的 "),E("code",[v._v("put")]),v._v(" 不会")])]),v._v(" "),E("p",[v._v("GC 过程")]),v._v(" "),E("ol",[E("li",[v._v("对象是否已死(GCRoot可达性)")]),v._v(" "),E("li",[v._v("四大引用(强 -> 软 -> 弱 -> 虚逐步递减)\n"),E("blockquote",[E("p",[v._v("强：最为普通的引用，如果对象不死，就不会被回收\n软：稍弱一些的引用，如果即将 OutOfMemoryError 就会对其进行回收\n弱：常用的防止内存泄漏的引用类型，只要进行垃圾回收就马上被回收\n虚：最弱的引用，无法取到目标对象，用于跟踪对象垃圾回收的状态，通过查看引用队列是否有虚引用判断其是否即将被回收")])])]),v._v(" "),E("li",[v._v("是否有必要\n"),E("blockquote",[E("p",[v._v("GCRoot 不可达 -> 第一次标记进入 F-Queue -> F-Queue 第二次标记 -> 回收")])])]),v._v(" "),E("li",[v._v("回收方法区(废弃常量、无用静态类)")]),v._v(" "),E("li",[v._v("类没有实例")]),v._v(" "),E("li",[v._v("ClassLoader 也被回收")]),v._v(" "),E("li",[v._v("Class 对象没有被引用")]),v._v(" "),E("li",[v._v("回收算法")]),v._v(" "),E("li",[v._v("标记-清除算法(会产生内存碎片)")]),v._v(" "),E("li",[v._v("复制-清除算法(初生代常用，from 和 to Survivor 区域)")]),v._v(" "),E("li",[v._v("标记-移动算法(老生代常用，标记回收对象，回收之后移动剩余对象)")])]),v._v(" "),E("p",[E("code",[v._v("wait()")]),v._v(" 和 "),E("code",[v._v("sleep()")]),v._v(" 的区别")]),v._v(" "),E("ol",[E("li",[E("code",[v._v("wait()")]),v._v(" 位于 "),E("code",[v._v("Object")]),v._v("，"),E("code",[v._v("sleep()")]),v._v(" 位于 "),E("code",[v._v("Thread")])]),v._v(" "),E("li",[E("code",[v._v("wait()")]),v._v(" 只能用于同步块， "),E("code",[v._v("sleep()")]),v._v(" 什么地方都使用")]),v._v(" "),E("li",[E("code",[v._v("wait()")]),v._v(" 会释放锁，"),E("code",[v._v("sleep()")]),v._v(" 不会释放锁")])]),v._v(" "),E("p",[v._v("线程开启有哪几种方式")]),v._v(" "),E("ol",[E("li",[v._v("继承 "),E("code",[v._v("Thread")]),v._v("，重写 "),E("code",[v._v("run()")])]),v._v(" "),E("li",[v._v("实现 "),E("code",[v._v("Runnable")]),v._v("，调用 "),E("code",[v._v("Thread.start()")])]),v._v(" "),E("li",[v._v("实现 "),E("code",[v._v("Callable")]),v._v("，使用 "),E("code",[v._v("FutureTask")]),v._v(" 包装并传入 "),E("code",[v._v("Thread")])]),v._v(" "),E("li",[E("code",[v._v("FutureTask")]),v._v(" 获取返回值实现原理 ("),E("code",[v._v("get()")]),v._v(")\n"),E("blockquote",[E("p",[v._v("如果完成了，就返回，如果未完成，就阻塞主线程，等待结果")])])])]),v._v(" "),E("p",[v._v("如何保证线程执行顺序")]),v._v(" "),E("ol",[E("li",[E("code",[v._v("thread.join()")]),v._v(" 当前线程等待 "),E("code",[v._v("thread")]),v._v(" 的终止")]),v._v(" "),E("li",[v._v("使用锁")]),v._v(" "),E("li",[v._v("使用 "),E("code",[v._v("Condition")])]),v._v(" "),E("li",[v._v("CAS 操作")])])],1)}),[],!1,null,null,null);_.default=e.exports}}]);