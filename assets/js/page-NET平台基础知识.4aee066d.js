(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{769:function(t,a,s){"use strict";s.r(a);var _=s(1),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1 . 概述")]),t._v(" "),s("p",[t._v(".NET 是微软公司开发的一个运行库和平台，它是平台无关和语言无关的，可以支持多种语言创建 .NET 应用并跨平台运行。")]),t._v(" "),s("blockquote",[s("p",[t._v('这有点类似 Java 的 "write once, run anywhere" 的思想')])]),t._v(" "),s("h2",{attrs:{id:"_2-net-平台的构成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-net-平台的构成"}},[t._v("#")]),t._v(" 2. .NET 平台的构成")]),t._v(" "),s("p",[t._v(".NET 平台主要有平台构造块（CLR, CTS, CLS）和基础类库构成。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-平台构造块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-平台构造块"}},[t._v("#")]),t._v(" 2.1 平台构造块")]),t._v(" "),s("p",[t._v(".NET 的平台构造块有三个，分别为 CLR, CTS 和 CLS。")]),t._v(" "),s("h4",{attrs:{id:"_2-1-1-clr-公共语言运行库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-clr-公共语言运行库"}},[t._v("#")]),t._v(" 2.1.1 CLR —— 公共语言运行库")]),t._v(" "),s("p",[t._v("CLR 全称叫做 Common Langurage Runtime。其主要作用就是为我们定位、加载和管理 .NET 类型，同时负责底层细节的工作，如内存管理、应用托管、处理线程、安全检查等。")]),t._v(" "),s("blockquote",[s("p",[t._v("从 Java 的角度看，CLR 相当于 Java 的 JRE")])]),t._v(" "),s("h4",{attrs:{id:"_2-1-2-cts-公共类型系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-cts-公共类型系统"}},[t._v("#")]),t._v(" 2.1.2 CTS —— 公共类型系统")]),t._v(" "),s("p",[t._v("CTS 的全称叫做 Common Type System。顾名思义，它定义了一个公共的 .NET 类型系统，描述 .NET 支持的数据结构和类型，这是 .NET 的多语言支持的特点。")]),t._v(" "),s("h4",{attrs:{id:"_2-1-3-cls-公共语言规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-cls-公共语言规范"}},[t._v("#")]),t._v(" 2.1.3 CLS —— 公共语言规范")]),t._v(" "),s("p",[t._v("CLS 全称为 Common Language Specification。它定义了一个让所有的 .NET 语言都支持的公共类型和编程结构的子集，这主要是保证各个语言的兼容性而设计的。如果构造的 .NET 类型仅公开与 CLS 兼容的部分，那么所编写的 .NET 库就能与其他语言进行交互。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-基础类库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-基础类库"}},[t._v("#")]),t._v(" 2.2 基础类库")]),t._v(" "),s("p",[t._v(".NET 除了三大构件以外，还提供了一个使用与全部 .NET 程序语言的基础库。")]),t._v(" "),s("blockquote",[s("p",[t._v("相当于 Java 和 C ++ 中的标准库")])]),t._v(" "),s("p",[t._v("基础类库包括各种基本类型，文件 IO ，线程，GUI 以及与各种外部设备的交互等等。")]),t._v(" "),s("p",[t._v("下面的图显示了 .NET 构件与基础类库的关系。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.blog.csdn.net/20160611195251305",alt:"关系"}})]),t._v(" "),s("h2",{attrs:{id:"_3-c-的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-c-的特点"}},[t._v("#")]),t._v(" 3. C# 的特点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("不需要指针")])]),t._v(" "),s("li",[s("p",[t._v("自动管理内存和垃圾回收")]),t._v(" "),s("blockquote",[s("p",[t._v("所以不支持 "),s("code",[t._v("delete")]),t._v(" 关键字")])])]),t._v(" "),s("li",[s("p",[t._v("类、接口、结构、枚举、委托都有正式的语法结构")])]),t._v(" "),s("li",[s("p",[t._v("可以重载操作符")])]),t._v(" "),s("li",[s("p",[t._v("支持基于特性的编程")])]),t._v(" "),s("li",[s("p",[t._v("属性(property) 而非字段(field)")]),t._v(" "),s("blockquote",[s("p",[t._v("也就是说可以直接用点操作符而不是使用 getter 和 setter。")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("await")]),t._v(" 和 "),s("code",[t._v("async")]),t._v(" 关键字，类似同步调用的异步调用方法")])])]),t._v(" "),s("p",[t._v("同时还具有其他语言的泛型、匿名类、反射等特性。")]),t._v(" "),s("h2",{attrs:{id:"_4-托管代码和非托管代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-托管代码和非托管代码"}},[t._v("#")]),t._v(" 4. 托管代码和非托管代码")]),t._v(" "),s("p",[t._v("和 Java 一样，C# 语言需要生成类似 Java 字节码的一种中间代码才能够运行。")]),t._v(" "),s("p",[t._v("所以 C# 编译生成的代码只能在 .NET 运行库中执行。")]),t._v(" "),s("blockquote",[s("p",[t._v("就像 Java 必须使用 JRE 运行一样")])]),t._v(" "),s("p",[t._v("正确的来说，这种必须在 .NET 运行库中执行的代码被称为"),s("strong",[t._v("托管代码")]),t._v("(managed code)；")]),t._v(" "),s("p",[t._v("包含托管代码的二进制单元称为"),s("strong",[t._v("程序集")]),t._v("(assembly)。")]),t._v(" "),s("p",[t._v("反之，不能直接在 .NET 运行库承载的代码被称为非托管代码(unmanaged code)")]),t._v(" "),s("h2",{attrs:{id:"_5-其他支持-net-的编程语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-其他支持-net-的编程语言"}},[t._v("#")]),t._v(" 5. 其他支持 .NET 的编程语言")]),t._v(" "),s("p",[t._v("除了 C# 以外，.NET 框架也支持其他的编程语言。")]),t._v(" "),s("p",[t._v("实际上，在安装了 Visual Studio 之后，微软会提供 C#, Visual Basic, C++/CLI , JavaScript 和 F# 的 .NET 支持")]),t._v(" "),s("h2",{attrs:{id:"_6-net-程序集概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-net-程序集概览"}},[t._v("#")]),t._v(" 6. .NET 程序集概览")]),t._v(" "),s("p",[t._v("为了实现平台无关性，.NET 采用了程序集的概念。")]),t._v(" "),s("p",[t._v("不同的语言通过特定的编译器，编译得到一个中间语言(IL)和元数据，随后打包成一个程序集。")]),t._v(" "),s("blockquote",[s("p",[t._v("需要注意的是，.NET 中间语言拥有很多种缩写，IL 只是其中一种，其余的还有 MSIL 或者 CIL。")]),t._v(" "),s("p",[t._v("IL, MSIL, CIL 都是等价的，指的就是中间语言。")])]),t._v(" "),s("p",[t._v("程序集是二进制大对象所打包成的集合，大致分为两类；")]),t._v(" "),s("p",[t._v("一类是应用程序，拥有一个 "),s("code",[t._v(".exe")]),t._v(" 入口。")]),t._v(" "),s("p",[t._v("另一类是库，具有 "),s("code",[t._v(".dll")]),t._v(" 扩展名。")]),t._v(" "),s("p",[t._v("CIL 类似于 Java 的字节码，也是平台无关性的一个重要的原因。")]),t._v(" "),s("p",[t._v("在运行时，CIL 通过 JIT 编译器编译成为特定的机器码，在不同的设备上进行运行。")]),t._v(" "),s("p",[t._v("程序集除了包含 CIL 以外，还包含了元数据。元数据是许多 C# 特性的支柱（例如反射，晚期绑定等），同时，一些现代 IDE (Visual Studio)可以利用元数据进行智能感知。")]),t._v(" "),s("p",[t._v("此外，程序集还包含了描述程序集本身的元数据，它们叫做"),s("strong",[t._v("清单")]),t._v("(manifest)。")]),t._v(" "),s("h2",{attrs:{id:"_7-cts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-cts"}},[t._v("#")]),t._v(" 7. CTS")]),t._v(" "),s("p",[t._v("CTS 是 .NET 的公共类型系统，它包括五个内容：")]),t._v(" "),s("ul",[s("li",[t._v("类")]),t._v(" "),s("li",[t._v("接口")]),t._v(" "),s("li",[t._v("结构")]),t._v(" "),s("li",[t._v("枚举")]),t._v(" "),s("li",[t._v("委托")])]),t._v(" "),s("p",[t._v("大体上与 Java 类似，下面重点讲讲和 Java 不同的部分。")]),t._v(" "),s("h3",{attrs:{id:"_7-1-委托-delegate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-委托-delegate"}},[t._v("#")]),t._v(" 7.1 委托(delegate)")]),t._v(" "),s("p",[t._v("这可以算是 C# 相对 Java 的一个进步的方面。委托相当于一个类型安全的"),s("strong",[t._v("函数指针")]),t._v("，实际上委托是一个派生自 "),s("code",[t._v("System.MultcastDelegate")]),t._v(" 的"),s("strong",[t._v("类")]),t._v("，使用 "),s("code",[t._v("delegate")]),t._v(" 关键字可以声明一个委托。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delegate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BinaryOp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")])]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("这样，就可以使用委托来实现回调，而不需要像 Java 一样使用臃肿的接口来进行回调动作。")]),t._v(" "),s("h3",{attrs:{id:"_7-2-结构-struct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-结构-struct"}},[t._v("#")]),t._v(" 7.2 结构(struct)")]),t._v(" "),s("p",[t._v("C# 的结构和 C99 之后的结构很像，用法也趋近；可以包含字段、构造函数、定义方法等。")]),t._v(" "),s("p",[t._v("不过一般当做一个容器类来使用。")]),t._v(" "),s("h2",{attrs:{id:"_8-内建类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-内建类型"}},[t._v("#")]),t._v(" 8. 内建类型")]),t._v(" "),s("p",[t._v("同样，.NET 具有一个內建的核心数据类型，用于兼容不同平台的类型结构。下表给出了一个 CTS 数据类型和 C# 、C++ 的相应对比。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("CTS")]),t._v(" "),s("th",[t._v("C")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("C++")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("System.Byte")]),t._v(" "),s("td",[t._v("byte")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned char")])]),t._v(" "),s("tr",[s("td",[t._v("System.SByte")]),t._v(" "),s("td",[t._v("sbyte")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("signed cahr")])]),t._v(" "),s("tr",[s("td",[t._v("System.Int16")]),t._v(" "),s("td",[t._v("short")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("short")])]),t._v(" "),s("tr",[s("td",[t._v("System.Int32")]),t._v(" "),s("td",[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("int 或 long")])]),t._v(" "),s("tr",[s("td",[t._v("System.Int64")]),t._v(" "),s("td",[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("int64_t")])]),t._v(" "),s("tr",[s("td",[t._v("System.UInt16")]),t._v(" "),s("td",[t._v("ushort")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned short")])]),t._v(" "),s("tr",[s("td",[t._v("System.UInt32")]),t._v(" "),s("td",[t._v("uint")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned int 或 unsigned long")])]),t._v(" "),s("tr",[s("td",[t._v("System.UInt64")]),t._v(" "),s("td",[t._v("ulong")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned int64_t")])]),t._v(" "),s("tr",[s("td",[t._v("System.Single")]),t._v(" "),s("td",[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("float")])]),t._v(" "),s("tr",[s("td",[t._v("System.Double")]),t._v(" "),s("td",[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("double")])]),t._v(" "),s("tr",[s("td",[t._v("System.Object")]),t._v(" "),s("td",[t._v("object")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("object^")])]),t._v(" "),s("tr",[s("td",[t._v("System.Char")]),t._v(" "),s("td",[t._v("char")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")])]),t._v(" "),s("tr",[s("td",[t._v("System.String")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("String^")])]),t._v(" "),s("tr",[s("td",[t._v("System.Decimal")]),t._v(" "),s("td",[t._v("decimal")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Decimal")])]),t._v(" "),s("tr",[s("td",[t._v("System.Boolean")]),t._v(" "),s("td",[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("bool")])])])]),t._v(" "),s("h2",{attrs:{id:"_9-clr"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-clr"}},[t._v("#")]),t._v(" 9. CLR")]),t._v(" "),s("p",[t._v("CLR 类似于 JVM，利用 "),s("code",[t._v("mscoree.dll")]),t._v(" 库来进行 .NET 程序加载工作。")]),t._v(" "),s("p",[t._v("下图是 "),s("code",[t._v("mscoree.dll")]),t._v(" 的工作流。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.ituring.com.cn/download/01YY7g3jBdEN",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_10-名称空间-namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-名称空间-namespace"}},[t._v("#")]),t._v(" 10. 名称空间(namespace)")]),t._v(" "),s("p",[t._v("这个特性类似于 Java 的 "),s("code",[t._v("package")]),t._v(" 。")]),t._v(" "),s("p",[t._v("语法和 C++ 中的名称空间语法相同，使用 "),s("code",[t._v("using")]),t._v(" 来引入名称空间（相当于 Java 的 "),s("code",[t._v("import")]),t._v("） 来进行使用。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("WriteLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi from C#"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("当然，同 Java 一样，在使用对应的名称空间之前，首先要引入依赖程序集。")])])}),[],!1,null,null,null);a.default=v.exports}}]);