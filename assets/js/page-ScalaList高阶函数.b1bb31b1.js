(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{839:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("高阶函数是函数式编程的一个很大的特性；")]),t._v(" "),a("p",[t._v("同时，其中集合类的高阶函数在日常的开发和使用中，占了一个很重要的位置；")]),t._v(" "),a("p",[t._v("但是，这些函数有可能会在刚接触的时候搞不懂它们的具体作用；")]),t._v(" "),a("p",[t._v("那么今天就以 "),a("code",[t._v("List")]),t._v(" 来说一说常用的高阶函数具体的作用。")]),t._v(" "),a("h2",{attrs:{id:"_1-子集操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-子集操作"}},[t._v("#")]),t._v(" 1. 子集操作")]),t._v(" "),a("p",[t._v("在一个集合中选取一些特定的元素作为子集；")]),t._v(" "),a("p",[t._v("我们在指令性语言中，通常选用 "),a("code",[t._v("for")]),t._v(" 语句来实现这个需求；")]),t._v(" "),a("p",[t._v("而在函数式语言中，我们有对应的高阶函数来解决这个问题。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-filter-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-filter-p-t-boolean"}},[t._v("#")]),t._v(" 1.1 "),a("code",[t._v("filter(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("顾名思义， "),a("strong",[t._v("过滤器")]),t._v("，用来 "),a("strong",[t._v("选取符合条件的元素")]),t._v("， 并将其作为返回值；")]),t._v(" "),a("p",[t._v("这里的 "),a("strong",[t._v("符合条件")]),t._v(" 指的是 使得函数 "),a("code",[t._v("p")]),t._v(" 的返回值为 "),a("code",[t._v("true")]),t._v(" 的元素。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(3, 4)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-2-filternot-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-filternot-p-t-boolean"}},[t._v("#")]),t._v(" 1.2 "),a("code",[t._v("filterNot(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("同理，这个函数是上面的反面，也就是用来 "),a("strong",[t._v("过滤掉")]),t._v(" 符合条件的元素；")]),t._v(" "),a("p",[t._v("返回的是， "),a("strong",[t._v("不包含符合元素的子集")]),t._v("；")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filterNot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 3)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-3-partition-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-partition-p-t-boolean"}},[t._v("#")]),t._v(" 1.3 "),a("code",[t._v("partition(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("这个函数是上面两个函数的集合体，返回的是一个 "),a("code",[t._v("Turple")]),t._v("，包含的元素为：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(list.filter, list.filterNot)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns: (List(1, 2, 3), List(4, 5, 6, 7))")]),t._v("\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("partition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_1-4-takewhile-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-takewhile-p-t-boolean"}},[t._v("#")]),t._v(" 1.4 "),a("code",[t._v("takeWhile(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("这个函数会一直选取元素， "),a("strong",[t._v("直到 "),a("code",[t._v("p")]),t._v(" 的返回值为 "),a("code",[t._v("false")])]),t._v("，然后将元素作为新的集合返回。")]),t._v(" "),a("p",[t._v("可以看到，这个函数返回的就是 "),a("strong",[t._v("符合条件的集合前缀")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意最后一个 1 并没有拿走")]),t._v("\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("takeWhile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 1, 1, 1)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"_1-5-dropwhile-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-dropwhile-p-t-boolean"}},[t._v("#")]),t._v(" 1.5 "),a("code",[t._v("dropWhile(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("和上面的方法相反，这个方法会一直 "),a("strong",[t._v("丢弃")]),t._v(" 元素，直到 "),a("code",[t._v("p")]),t._v(" 的返回值为 "),a("code",[t._v("false")]),t._v("；")]),t._v(" "),a("p",[t._v("那么可以看到，这个函数返回的就是 "),a("strong",[t._v("不符合条件的集合后缀")]),t._v("；")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dropWhile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(4, 2, 1)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_1-6-span-p-t-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-span-p-t-boolean"}},[t._v("#")]),t._v(" 1.6 "),a("code",[t._v("span(p: (T) => Boolean)")])]),t._v(" "),a("p",[t._v("这个函数是上两个函数的结合，它返回的是如下的一个 "),a("code",[t._v("Turple")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("takeWhile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dropWhile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-7-partition、span-和它们的基本方法的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-partition、span-和它们的基本方法的区别"}},[t._v("#")]),t._v(" 1.7 "),a("code",[t._v("partition")]),t._v("、"),a("code",[t._v("span")]),t._v(" 和它们的基本方法的区别")]),t._v(" "),a("p",[t._v("既然 "),a("code",[t._v("partition")]),t._v(" 和 "),a("code",[t._v("span")]),t._v(" 都可以用基本的 "),a("code",[t._v("filter")]),t._v("、"),a("code",[t._v("filterNot")]),t._v(" 和 "),a("code",[t._v("takeWhile")]),t._v("、"),a("code",[t._v("dropWhile")]),t._v(" 来解决，那为什么还要专门实现一次这两个方法呢？")]),t._v(" "),a("p",[t._v("其实，"),a("code",[t._v("span")]),t._v(" 和 "),a("code",[t._v("partition")]),t._v(" 只需要扫描一次集合；")]),t._v(" "),a("p",[t._v("但是如果使用 "),a("code",[t._v("filter")]),t._v("、"),a("code",[t._v("filterNot")]),t._v(" 和 "),a("code",[t._v("takeWhile")]),t._v("、"),a("code",[t._v("dropWhile")]),t._v(" 来实现的话，就需要扫描两次集合了。")]),t._v(" "),a("p",[t._v("所以，如果同时需要两者的数据的话，那么使用 "),a("code",[t._v("span")]),t._v(" 和 "),a("code",[t._v("partition")]),t._v(" 显然是更经济的。")]),t._v(" "),a("h3",{attrs:{id:"_1-8-withfilter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-withfilter"}},[t._v("#")]),t._v(" 1.8 "),a("code",[t._v("withFilter")])]),t._v(" "),a("p",[t._v("Scala 除了 "),a("code",[t._v("filter")]),t._v(" 之外，还提供了一个 "),a("code",[t._v("withFilter")]),t._v(" 函数；")]),t._v(" "),a("p",[t._v("那么，这两者有什么区别呢？")]),t._v(" "),a("p",[t._v("根据文档：")]),t._v(" "),a("blockquote",[a("p",[t._v("Note: the difference between "),a("code",[t._v("c filter p")]),t._v(" and "),a("code",[t._v("c withFilter p")]),t._v(" is that the former creates a new collection, whereas the latter only restricts the domain of subsequent map, flatMap, foreach, and withFilter operations.")])]),t._v(" "),a("p",[t._v("也就是说，"),a("code",[t._v("filter")]),t._v(" 会返回一个 "),a("strong",[t._v("新的 "),a("code",[t._v("List")])]),t._v("；")]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("withFilter")]),t._v(" 不会返回新的 "),a("code",[t._v("List")]),t._v("；")]),t._v(" "),a("p",[t._v("它只会提供一个过滤器的作用，让符合条件的元素通过，以方便接下来的 "),a("code",[t._v("map")]),t._v(" 等其他高阶函数的使用；")]),t._v(" "),a("p",[t._v("而就效率而言，"),a("code",[t._v("withFilter")]),t._v(" 比 "),a("code",[t._v("filter")]),t._v(" 要快。")]),t._v(" "),a("p",[t._v("如果你需要返回一个新的集合，就使用 "),a("code",[t._v("filter")]),t._v("；")]),t._v(" "),a("p",[t._v("如果你只是需要一个元素过滤器，而接下来，还需要进行其他操作，那么就使用 "),a("code",[t._v("withFilter")])]),t._v(" "),a("h2",{attrs:{id:"_2-元素检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-元素检查"}},[t._v("#")]),t._v(" 2. 元素检查")]),t._v(" "),a("p",[t._v("有时候，我们会希望检查集合内部的元素状态；")]),t._v(" "),a("p",[t._v("比如说， "),a("strong",[t._v("是否所有的元素都满足某个特定条件")]),t._v("；")]),t._v(" "),a("p",[t._v("或者， "),a("strong",[t._v("是否有元素满足特定条件")]),t._v("。")]),t._v(" "),a("p",[t._v("在 Scala 中，我们有高阶函数来进行这个操作。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-forall-p-t-boolean-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-forall-p-t-boolean-boolean"}},[t._v("#")]),t._v(" 2.1 "),a("code",[t._v("forAll(p: (T) => Boolean): Boolean")])]),t._v(" "),a("p",[t._v("顾名思义，检查 "),a("strong",[t._v("是否所有的元素都满足特定条件")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("forAll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-2-exists-p-t-boolean-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-exists-p-t-boolean-boolean"}},[t._v("#")]),t._v(" 2.2 "),a("code",[t._v("exists(p: (T) => Boolean): Boolean")])]),t._v(" "),a("p",[t._v("同理，检查 "),a("strong",[t._v("是否存在满足条件的元素")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"_3-变换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-变换"}},[t._v("#")]),t._v(" 3. 变换")]),t._v(" "),a("h3",{attrs:{id:"_3-1-map-f-t-u"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-map-f-t-u"}},[t._v("#")]),t._v(" 3.1 "),a("code",[t._v("map(f: (T) => U)")])]),t._v(" "),a("p",[a("code",[t._v("map")]),t._v(" 函数，可以说是这里面用的最多的高阶函数了；")]),t._v(" "),a("p",[a("code",[t._v("map")]),t._v(" 函数的真正作用，实际上是一种变换功能，而且不仅可以变换成和现元素类型相同的类型，也可以变换成不同的类型；")]),t._v(" "),a("p",[t._v("也就是说，可以通过 "),a("code",[t._v("map")]),t._v(" 函数，将一种元素的集合，变成另一种元素的集合。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将所有元素都乘以 2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(2, 4, 6, 8)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Int 变成 String")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// List("1", "2", "3", "4")')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3-2-flatten"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-flatten"}},[t._v("#")]),t._v(" 3.2 "),a("code",[t._v("flatten")])]),t._v(" "),a("p",[t._v("这个函数可以将嵌套的 "),a("code",[t._v("List")]),t._v(" 展平，就像它的名字一样。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" listOfLists "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlistOfLists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatten "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"_3-3-flatmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-flatmap"}},[t._v("#")]),t._v(" 3.3 "),a("code",[t._v("flatMap")])]),t._v(" "),a("p",[t._v("它是 "),a("code",[t._v("map")]),t._v(" 和 "),a("code",[t._v("flatten")]),t._v(" 的集合体，相当于先进行 "),a("code",[t._v("map")]),t._v(" 然后 "),a("code",[t._v("flatten")]),t._v("。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" listOfLists "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlistOfLists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(2, 4, 6, 8)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("也就是说，"),a("code",[t._v("flatMap")]),t._v(" 先将元素 "),a("code",[t._v("map")]),t._v(" 成 "),a("strong",[t._v("嵌套的")]),t._v(" "),a("code",[t._v("List")]),t._v("；")]),t._v(" "),a("p",[t._v("随后，再调用 "),a("code",[t._v("flatten")]),t._v("，将嵌套的 "),a("code",[t._v("List")]),t._v(" 展平")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("flatMap")]),t._v(" 的作用过于强大，使用时需要小心谨慎\n在 Twitter 的 "),a("em",[t._v("Effective Scala")]),t._v(" 中，推荐使用 "),a("em",[t._v("for-comprehention")]),t._v(" 来代替 "),a("code",[t._v("flatMap")]),t._v(" 的使用")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-zip-t-xs-list-u-list-t-u"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-zip-t-xs-list-u-list-t-u"}},[t._v("#")]),t._v(" 3.4 "),a("code",[t._v("zip[T](xs: List[U]): List[(T, U)]")])]),t._v(" "),a("p",[t._v("压缩，它的左右两个操作数分别是 "),a("strong",[t._v("两个 "),a("code",[t._v("List")])]),t._v("；")]),t._v(" "),a("p",[t._v("然后返回一个分别包含两个 "),a("code",[t._v("List")]),t._v(" 元素的二元组的 "),a("code",[t._v("List")]),t._v("。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// List((1, "a"), (2, "b"), (3, "c"), (4, "d"))')]),t._v("\nlist1 zip list2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3-5-unzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-unzip"}},[t._v("#")]),t._v(" 3.5 "),a("code",[t._v("unzip")])]),t._v(" "),a("p",[t._v("有压缩就有解压；")]),t._v(" "),a("p",[t._v("这个函数的作用就是将上面压缩后的结果解压出来；")]),t._v(" "),a("p",[t._v("具体来说就是接受一个二元组的 "),a("code",[t._v("List")]),t._v("， 返回一个 "),a("code",[t._v("List")]),t._v(" 的二元组。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// (List(1, 2, 3, 4), List("a", "b", "c", "d"))')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list1 zip list2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unzip\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"_3-6-collect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-collect"}},[t._v("#")]),t._v(" 3.6 "),a("code",[t._v("collect")])]),t._v(" "),a("p",[t._v("根据文档，"),a("code",[t._v("collect")]),t._v(" 接受一个 "),a("code",[t._v("PartialFunction")]),t._v("，然后对集合中的每个元素都 apply 这个函数，返回一个新的集合。")]),t._v(" "),a("p",[t._v("听起来，这个方法和 "),a("code",[t._v("map")]),t._v(" 很像，不过其区别就是在于 "),a("code",[t._v("collect")]),t._v(" 接受的是一个 "),a("code",[t._v("PartialFnction")]),t._v(" ；")]),t._v(" "),a("p",[t._v("这具体是什么意思呢？")]),t._v(" "),a("p",[t._v("我们来举个例子：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" convertFn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PartialFunction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Some"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toInt\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Some"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Some"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("convertFn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List[Int] = List(0, 1, 2, 3, 5)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("注意到， "),a("code",[t._v("collect")]),t._v(" 的 lambda 中，并没有对所有的 "),a("code",[t._v("case")]),t._v(" 都进行处理；")]),t._v(" "),a("p",[t._v("上面的 "),a("code",[t._v("List")]),t._v(" 除了含有 "),a("code",[t._v("String")]),t._v(" 、 "),a("code",[t._v("Int")]),t._v(" 和 "),a("code",[t._v("Some[String]")]),t._v(" 之外，还含有 "),a("code",[t._v("Some[Int]")]),t._v("；")]),t._v(" "),a("p",[t._v("这就是所谓的 "),a("code",[t._v("PartialFunction")]),t._v(" ，它并没有对所有的情形都进行处理，也没有提供一个默认的选项。")]),t._v(" "),a("p",[t._v("如果上面的 "),a("code",[t._v("collect")]),t._v(" 替换为 "),a("code",[t._v("map")]),t._v("，则第四个 "),a("code",[t._v("Some(4)")]),t._v(" 就会导致 "),a("code",[t._v("MatchError")]),t._v("；")]),t._v(" "),a("p",[t._v("而 "),a("code",[t._v("collect")]),t._v(" 则避开了这个错误。")]),t._v(" "),a("p",[t._v("理论上，"),a("code",[t._v("collect")]),t._v(" 进行了 "),a("code",[t._v("map")]),t._v(" 和 "),a("code",[t._v("filter")]),t._v(" 的两重功能。")]),t._v(" "),a("p",[t._v("虽然，"),a("code",[t._v("collect")]),t._v(" 不会造成 "),a("code",[t._v("MatchError")]),t._v("；")]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("collect")]),t._v(" 不是使用 "),a("code",[t._v("try...catch")]),t._v(" 实现的。")]),t._v(" "),a("p",[a("code",[t._v("collect")]),t._v(" 是通过检查函数中提供的 "),a("code",[t._v("case")]),t._v(" 检查；")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("case")]),t._v(" 不匹配，则跳过该元素，不调用函数；")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("case")]),t._v(" 中存在 "),a("code",[t._v("???")]),t._v("，那么同样也会抛出异常：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[t._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nscala"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NotImplementedError"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" an implementation is missing\n  at scala"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Predef$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$qmark$qmark$qmark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Predef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("225")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  at $anonfun$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("applyOrElse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  at scala"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("immutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("303")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" elided\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"_3-7-collectfirst"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-collectfirst"}},[t._v("#")]),t._v(" 3.7 "),a("code",[t._v("collectFirst")])]),t._v(" "),a("p",[t._v("这是 "),a("code",[t._v("collect")]),t._v(" 的简化版本；")]),t._v(" "),a("p",[t._v("它只会将函数应用在 "),a("strong",[t._v("第一个满足")]),t._v(" 其 "),a("code",[t._v("case")]),t._v(" 的元素中，并返回一个包含该元素的 "),a("code",[t._v("Option")]),t._v(" 对象。")]),t._v(" "),a("p",[t._v("如果不存在这样的函数，那么就返回 "),a("code",[t._v("None")])]),t._v(" "),a("h3",{attrs:{id:"_3-8-groupby-a-f-a-k-map-k-seq-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-groupby-a-f-a-k-map-k-seq-a"}},[t._v("#")]),t._v(" 3.8 "),a("code",[t._v("groupBy[A](f: (A) => K): Map[K, Seq[A]]")])]),t._v(" "),a("p",[a("code",[t._v("groupBy")]),t._v(" 通过函数 "),a("code",[t._v("f")]),t._v("，将 "),a("code",[t._v("List")]),t._v(" 分成不同的部分；")]),t._v(" "),a("p",[t._v("每一个部分由一个键值 "),a("code",[t._v("K")]),t._v(" 来进行映射，最终返回结果为一个 "),a("code",[t._v("Map")]),t._v(" 对象。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" fruit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"peer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orange"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pineapple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nfruit groupBy "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//> Map(p -> List("peer", "pineapple"),')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      a -> List("apple"),')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//      o -> List("orange"))')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_4-规约"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-规约"}},[t._v("#")]),t._v(" 4. 规约")]),t._v(" "),a("p",[t._v("在一个集合中，我们通常还会进行规约操作；")]),t._v(" "),a("p",[t._v("例如求一个 1 到 100 的和；")]),t._v(" "),a("p",[t._v("那么，此时，我们就是将一个 1 到 100 的集合规约到一个 "),a("code",[t._v("Int")]),t._v("，它是这个集合所有元素的和。")]),t._v(" "),a("p",[t._v("下面介绍的就是一系列规约函数。")]),t._v(" "),a("h3",{attrs:{id:"_4-1-reduceleft-op-b-t-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-reduceleft-op-b-t-b"}},[t._v("#")]),t._v(" 4.1 "),a("code",[t._v("reduceLeft(op: (B, T) => B)")])]),t._v(" "),a("p",[t._v("顾名思义，从左到右进行规约操作；")]),t._v(" "),a("p",[t._v("该函数会从左到右地使用操作符 "),a("code",[t._v("op")]),t._v(" 将元素连接起来。")]),t._v(" "),a("p",[t._v("注意 "),a("code",[t._v("op")]),t._v(" 是个二元操作，它接受两个参数，返回一个值。")]),t._v(" "),a("p",[t._v("那么产生的结果就是一个 "),a("strong",[t._v("左斜的树")]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Scala-List-高阶函数/left-tilt-tree.svg",alt:"左斜的树"}})]),t._v(" "),a("p",[t._v("需要注意的是，"),a("code",[t._v("reduceLeft")]),t._v(" 不仅能返回和原有元素相同类型的值，也能返回不同类型的值；")]),t._v(" "),a("p",[t._v("基于这样的树结构，那么对 "),a("code",[t._v("op")]),t._v(" 的类型就有了要求；")]),t._v(" "),a("p",[t._v("可以看到，在上面，下方的 "),a("code",[t._v("op")]),t._v(" 的返回值是作为上方 "),a("code",[t._v("op")]),t._v(" 的左节点；")]),t._v(" "),a("p",[t._v("也就是说，"),a("code",[t._v("reduceLeft")]),t._v(" 要求， "),a("strong",[a("code",[t._v("op")]),t._v(" 的左边参数的类型，必须和其返回值的类型相同。")])]),t._v(" "),a("h3",{attrs:{id:"_4-2-foldleft-z-b-op-b-t-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-foldleft-z-b-op-b-t-b"}},[t._v("#")]),t._v(" 4.2 "),a("code",[t._v("foldLeft(z: B)(op: (B, T) => B)")])]),t._v(" "),a("p",[a("code",[t._v("foldLeft")]),t._v(" 则是对 "),a("code",[t._v("reduceLeft")]),t._v(" 的进一步泛化；")]),t._v(" "),a("p",[a("code",[t._v("reduceLeft")]),t._v(" 是不允许在 "),a("strong",[t._v("空列表")]),t._v(" 中执行的；")]),t._v(" "),a("p",[t._v("对此，"),a("code",[t._v("foldLeft")]),t._v(" 提供了一个 "),a("strong",[t._v("初始值")]),t._v(" "),a("code",[t._v("z")]),t._v("；")]),t._v(" "),a("p",[t._v("如果列表为空，那么就返回 "),a("code",[t._v("z")]),t._v("；")]),t._v(" "),a("p",[t._v("它生成的树如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Scala-List-高阶函数/left-tilt-tree-with-z.svg",alt:"左斜的树 With Z"}})]),t._v(" "),a("p",[t._v("这里比较有意思的就是 "),a("code",[t._v("foldLeft")]),t._v(" 实际上是一个 "),a("strong",[t._v("柯里化函数")]),t._v("；")]),t._v(" "),a("p",[t._v("可以先提供初始值，然后在 "),a("code",[t._v("op")]),t._v(" 操作确定之后，再进行规约运算。")]),t._v(" "),a("h3",{attrs:{id:"_4-3-reduceright-op-t-b-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-reduceright-op-t-b-b"}},[t._v("#")]),t._v(" 4.3 "),a("code",[t._v("reduceRight(op: (T, B) => B)")])]),t._v(" "),a("p",[t._v("我们既然能从左边规约，当然也可以从右边规约；")]),t._v(" "),a("p",[a("code",[t._v("reduceRight")]),t._v(" 的作用就是， "),a("strong",[t._v("从右到左")]),t._v(" 执行规约操作；")]),t._v(" "),a("p",[t._v("那么，它所生成的树就是 "),a("strong",[t._v("右斜的")]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Scala-List-高阶函数/right-tilt-tree.svg",alt:"右斜的树"}})]),t._v(" "),a("p",[t._v("同理，"),a("code",[t._v("reduceRight")]),t._v(" 要求，它的右操作数的类型必须和它的返回值类型相同。")]),t._v(" "),a("h3",{attrs:{id:"_4-4-foldright-z-b-op-t-b-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-foldright-z-b-op-t-b-b"}},[t._v("#")]),t._v(" 4.4 "),a("code",[t._v("foldRight(z: B)(op: (T, B) => B)")])]),t._v(" "),a("p",[t._v("同样的，我们也具有一个  "),a("code",[t._v("foldRight")]),t._v(" 函数，在集合为空时，返回初始值 "),a("code",[t._v("z")]),t._v("；")]),t._v(" "),a("p",[t._v("它生成的树如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Scala-List-高阶函数/right-tilt-tree-with-z.svg",alt:"右斜的树 With Z"}})]),t._v(" "),a("h3",{attrs:{id:"_4-5-left-和-right-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-left-和-right-的区别"}},[t._v("#")]),t._v(" 4.5 "),a("code",[t._v("left")]),t._v(" 和 "),a("code",[t._v("right")]),t._v(" 的区别")]),t._v(" "),a("p",[t._v("那么 "),a("code",[t._v("left")]),t._v(" 和 "),a("code",[t._v("right")]),t._v(" 有什么区别呢？")]),t._v(" "),a("p",[t._v("实际上，高阶函数的作用范围都是 "),a("strong",[t._v("整个列表")]),t._v("；")]),t._v(" "),a("p",[t._v("所以，对于满足 "),a("strong",[t._v("交换律")]),t._v(" 和 "),a("strong",[t._v("结合律")]),t._v(" 的运算，从左边执行和从右边执行的结果是 "),a("strong",[t._v("一样的")]),t._v("，例如 "),a("strong",[t._v("加法操作")]),t._v("；")]),t._v(" "),a("p",[t._v("但是，对于不满足交换律和结合律的运算，例如 "),a("strong",[t._v("减法操作")]),t._v("；")]),t._v(" "),a("p",[t._v("那么这两个函数的执行结果就不一样。")]),t._v(" "),a("h3",{attrs:{id:"_4-6-其他规约函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-其他规约函数"}},[t._v("#")]),t._v(" 4.6 其他规约函数")]),t._v(" "),a("p",[t._v("Scala 还提供了一些其他的针对数字类型的规约函数；")]),t._v(" "),a("p",[t._v("例如："),a("code",[t._v("sum")]),t._v("， "),a("code",[t._v("product")]),t._v("，"),a("code",[t._v("max")]),t._v(" 和 "),a("code",[t._v("min")]),t._v("；")]),t._v(" "),a("p",[t._v("不过，"),a("code",[t._v("sum")]),t._v(" 和 "),a("code",[t._v("product")]),t._v(" 只能用于数字类型，否则会报错。")]),t._v(" "),a("h2",{attrs:{id:"_5-其他高阶函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-其他高阶函数"}},[t._v("#")]),t._v(" 5. 其他高阶函数")]),t._v(" "),a("p",[t._v("Scala 集合中还拥有其他的高阶函数，诸如："),a("code",[t._v("count")]),t._v("、"),a("code",[t._v("find")]),t._v("、"),a("code",[t._v("sortWith")]),t._v(" 等；")]),t._v(" "),a("p",[t._v("这些函数的作用比较明显，可以从它的命名中推测出其作用，在这里就不多做解释了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);