(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{959:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("如果你开发过稍微有点体量的 Android App，都会因为越来越多的 Gradle 依赖而头疼。")]),s._v(" "),a("p",[s._v("一个 App 的编译依赖少则十几项，多则几十项，如果再加上多 module，那么依赖的统一管理就很重要了。")]),s._v(" "),a("p",[s._v("但是，如何高效统一管理，则是一个难题。今天就来说说如何使用 buildSrcVersions 轻松管理 gradle 依赖。")]),s._v(" "),a("h2",{attrs:{id:"_1-ext-的弊端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-ext-的弊端"}},[s._v("#")]),s._v(" 1. Ext 的弊端")]),s._v(" "),a("p",[s._v("在介绍 buildSrcVersions 之前，我们先来看看 Google 官方推荐的统一管理方式，即使用 "),a("code",[s._v("ext")]),s._v(" 进行管理，例如：")]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("ext "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// The following are only a few examples of the types of properties you can define.")]),s._v("\n    compileSdkVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n    buildToolsVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"28.0.3"')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// You can also use this to specify versions for dependencies. Having consistent")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// versions between modules can avoid behavior conflicts.")]),s._v("\n    supportLibVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"28.0.0"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("然后在 "),a("code",[s._v("build.gradle")]),s._v(" 中")]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("android "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Use the following syntax to access properties you defined at the project level:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// rootProject.ext.property_name")]),s._v("\n  compileSdkVersion rootProject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("compileSdkVersion\n  buildToolsVersion rootProject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("buildToolsVersion\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("但是！这种方式有很大的问题：")]),s._v(" "),a("ol",[a("li",[s._v("由于多 module 工程需要共享一些变量，"),a("code",[s._v("ext")]),s._v(" 定义的位置可能在其他地方")]),s._v(" "),a("li",[s._v("最大的问题在于，IDE 不能跳转到这些变量的定义")])]),s._v(" "),a("p",[s._v("在日常使用中，如果你对工程不是很熟悉，那么在依赖版本需要更改的时候就要翻箱倒柜找一阵，这不免令人烦躁，影响工作效率。")]),s._v(" "),a("p",[s._v("那么除了 "),a("code",[s._v("ext")]),s._v(" 之外有没有更好的统一管理依赖的方式呢？")]),s._v(" "),a("p",[s._v("有的，Gradle 提供了一个 "),a("code",[s._v("buildSrc")]),s._v(" 方式。")]),s._v(" "),a("h2",{attrs:{id:"_2-kotlin-buildsrc-管理-gradle-依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-kotlin-buildsrc-管理-gradle-依赖"}},[s._v("#")]),s._v(" 2. Kotlin + buildSrc 管理 gradle 依赖")]),s._v(" "),a("p",[s._v("时至今日，Kotlin 不仅可以作为源文件用于开发目的，而且也可以当成脚本运行，这就是 "),a("code",[s._v(".kts")]),s._v(" 文件，而且 Gradle 系统也支持使用 "),a("code",[s._v("kts")]),s._v(" 文件作为 build 脚本。")]),s._v(" "),a("p",[s._v("废话不多说，使用 Kotlin 和 buildSrc 进行依赖管理主要需要以下步骤：")]),s._v(" "),a("ol",[a("li",[s._v("在根目录建立 "),a("code",[s._v("buildSrc")]),s._v(" 文件夹")]),s._v(" "),a("li",[s._v("在 "),a("code",[s._v("buildSrc")]),s._v(" 中创建 "),a("code",[s._v("build.gradle.kts")]),s._v("，并加上如下语句")])]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[s._v("plugins "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  `kotlin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dsl`\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nrepositories "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jcenter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("在 "),a("code",[s._v("buildSrc/src/main/java")]),s._v(" 中创建 "),a("code",[s._v("Versions.kt")]),s._v(" 和 "),a("code",[s._v("Libs.kt")])])]),s._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Versions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" compileSdkVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" targetSdkVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" retrofit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2.8.6"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Libs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" retrofit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(' "com'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("squareup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("retrofit2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("retrofit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Versions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("retrofit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("最后，在 "),a("code",[s._v("app/build.gradle")]),s._v(" 中")])]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("android "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compileSdkVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Versions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("compileSdkVersion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\ndependencies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("implementation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Libs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("retrofit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这样，我们既能实现依赖的统一管理，也能使用到 IDE 的自动补全和定义跳转功能，迅速定位到需要改动的版本。")]),s._v(" "),a("p",[s._v("但是！上面我们还是要自己去编写 "),a("code",[s._v("buildSrc")]),s._v("，不免有些麻烦。")]),s._v(" "),a("p",[s._v("而于此同时，我们也丢失了原先 gradle 会自动提示依赖的版本升级特性。")]),s._v(" "),a("p",[s._v("那么有没有一种东西能够把这两个东西结合在一起实现文体两开花呢？")]),s._v(" "),a("p",[s._v("到这里终于进入本篇主题：使用 "),a("code",[s._v("buildSrcVersions")]),s._v(" 插件")]),s._v(" "),a("h2",{attrs:{id:"_3-buildsrcversions-自动生成-buildsrc-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-buildsrcversions-自动生成-buildsrc-目录"}},[s._v("#")]),s._v(" 3. buildSrcVersions 自动生成 buildSrc 目录")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/jmfayard/buildSrcVersions",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("buildSrcVersions")]),s._v(" 插件的项目地址"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("首先，我们在根目录的 "),a("code",[s._v("build.gradle")]),s._v(" 中引入插件：")]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("buildscript "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nplugins "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"de.fayard.buildSrcVersions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"0.3.2"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Don't put any code before the buildscripts {} and plugins {} block")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这个插件增加了 "),a("code",[s._v("buildSrcVersions")]),s._v(" 这个 gradle task。")]),s._v(" "),a("p",[s._v("运行这个 task，它就会扫描并读取你的依赖项，并以此自动生成 "),a("code",[s._v("buildSrc")]),s._v(" 目录。")]),s._v(" "),a("p",[s._v("运行的结果如下：\n"),a("img",{attrs:{src:"https://pic2.superbed.cn/item/5ce99625451253d178df7b87.jpg",alt:"buildSrcVersions Result"}})]),s._v(" "),a("p",[s._v("接下来，我们就可以将 "),a("code",[s._v("build.gradle")]),s._v(" 中的依赖换成使用 "),a("code",[s._v("Libs")]),s._v(" 进行引用")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.superbed.cn/item/5ce9971a451253d178df821a.jpg",alt:"build.gradle with buildSrc"}})]),s._v(" "),a("p",[s._v("可以看到，上面这些依赖都是染了色的，也就是说它们可以直接跳转到对应的定义，而且也可以进行补全。")]),s._v(" "),a("p",[s._v("同时，"),a("code",[s._v("buildSrcVersions")]),s._v(" 还具备检查更新的能力，如果你已经生成过 "),a("code",[s._v("buildSrc")]),s._v(" 了，那么再次运行 "),a("code",[s._v("buildSrcVersions")]),s._v(" task 就会对你的依赖项进行更新检查，可用的新版本会以注释的形式附在对应依赖项字符串的后面。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.superbed.cn/item/5ce99890451253d178df8c1e.jpg",alt:"buildSrcVersions Update"}})]),s._v(" "),a("p",[s._v("当然，它是不会随便改你的代码的，这个更新它只是进行一下提示，到底要不要使用新版本还是根据项目情况来决定。")]),s._v(" "),a("p",[s._v("不过，这个好用的插件也是有缺陷的：")]),s._v(" "),a("p",[s._v("首先，它会生成一个空的 "),a("code",[s._v("settings.gradle.kts")]),s._v(" 文件，因为工程中只能有一个 "),a("code",[s._v("settings.gradle")]),s._v("，所以当它为空时还好，但是如果你往里面填东西，就会让 gradle 摸不着头脑，导致编译不稳定")]),s._v(" "),a("p",[s._v("对此，我们需要让它自动将 "),a("code",[s._v("settings.gradle")]),s._v(" 文件删掉，为 "),a("code",[s._v("buildSrcVersions")]),s._v(" task 增加一个 "),a("code",[s._v("doLast()")]),s._v(" 即可：")]),s._v(" "),a("div",{staticClass:"language-groovy line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[s._v("tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"buildSrcVersions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("doLast "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string gstring"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("rootDir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),s._v('/buildSrc/settings.gradle.kts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其次，它会导致 "),a("code",[s._v("build configuration")]),s._v(" 失败，如图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://pic.superbed.cn/item/5ce99ac2451253d178df9b03.jpg",alt:""}})]),s._v(" "),a("p",[s._v("其原因在于它的进程会占用 "),a("code",[s._v("build/dependenciesUpdate")]),s._v(" 导致 "),a("code",[s._v('task("clean")')]),s._v(" 无法创建。")]),s._v(" "),a("p",[s._v("虽然不影响工程的 Sync 和构建，但是有这个黄条总归是看的不爽的。")]),s._v(" "),a("p",[s._v("最后，它并不能自动的帮你改你的 "),a("code",[s._v("build.gradle")]),s._v("，需要你手动修改，当第一次使用这个东西的时候需要打的字还挺多的。")]),s._v(" "),a("p",[s._v("不过，比起它能自动快速构建 "),a("code",[s._v("buildSrc")]),s._v(" 来说，也还算得上是瑕不掩瑜。")]),s._v(" "),a("h2",{attrs:{id:"_4-一些潜在的坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-一些潜在的坑"}},[s._v("#")]),s._v(" 4. 一些潜在的坑")]),s._v(" "),a("p",[s._v("如果你选择使用 "),a("code",[s._v("buildSrcVersions")]),s._v(" 插件，那么请将 Android 构建相关的版本号单独放置在一个新文件中：")]),s._v(" "),a("div",{staticClass:"language-Kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// AndroidVersions.kt")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" AndroidVersions "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" compileSdkVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" targetSdkVersion "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" minSdkVersiosn "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("因为每次 "),a("code",[s._v("buildSrcVersions")]),s._v(" 运行都有可能会替换掉它生成的 "),a("code",[s._v("Versions.kt")]),s._v(" 和 "),a("code",[s._v("Libs.kt")])]),s._v(" "),a("p",[s._v("如果你选择自己编写 "),a("code",[s._v("buildSrc")]),s._v(" 目录，务必注意以下几件事情：")]),s._v(" "),a("ol",[a("li",[s._v("使用正确的目录结构")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("buildSrc")]),s._v(" 遵循默认的 Java/Kotlin 目录结构，即 "),a("code",[s._v("buildSrc/src/main/java/...")])])]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("不要忘记加 "),a("code",[s._v("jcenter()")])])]),s._v(" "),a("blockquote",[a("p",[s._v("不要忘记在 "),a("code",[s._v("buildSrc/build.gradle.kts")]),s._v(" 中增加 "),a("code",[s._v("jcenter()")]),s._v("，否则 "),a("code",[s._v("kotlin-dsl")]),s._v(" 插件是加载不成功的")])]),s._v(" "),a("p",[s._v("最后，也希望我的这篇文章能给大家提高劳动生产率吧，毕竟谁都想偷懒不是？😆")])])}),[],!1,null,null,null);t.default=e.exports}}]);