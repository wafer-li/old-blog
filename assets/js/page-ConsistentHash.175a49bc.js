(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{898:function(t,a,s){"use strict";s.r(a);var i=s(1),n=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("p",[t._v("大多数 DHT 使用稳定散列方法(consistent hash)来将关键值对应到节点。")]),t._v(" "),s("p",[t._v("在使用稳定散列算法后，哈希表槽位数（大小）的改变平均只需要对 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("K")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("K/n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[t._v("K")]),s("span",{staticClass:"mord"},[t._v("/")]),s("span",{staticClass:"mord mathnormal"},[t._v("n")])])])]),t._v(" 个关键字重新映射，其中 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("K")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("K")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[t._v("K")])])])]),t._v(" 是关键字的数量， "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("n")])])])]),t._v(" 是槽位数量。而不需要对整个哈希表进行重新映射。")]),t._v(" "),s("p",[t._v("下面就来介绍几种主流的 DHT 稳定散列协议算法。")]),t._v(" "),s("h2",{attrs:{id:"_2-chord-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-chord-算法"}},[t._v("#")]),t._v(" 2. Chord 算法")]),t._v(" "),s("p",[t._v("Chord 在 2001 年由 MIT 提出，它不关心资源是如何存储的，只关心资源的快速取得。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-散列计算方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-散列计算方法"}},[t._v("#")]),t._v(" 2.1 散列计算方法")]),t._v(" "),s("p",[t._v("Chord 使用 SHA-1 作为散列计算函数，保证了散列值的非重复性。SHA-1 会产生一个 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mn",[t._v("160")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^{160}")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.8141079999999999em"}},[s("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mtight"},[t._v("160")])])])])])])])])])])])]),t._v(" 的整数空间，每项为一个 160 bit 的大整数，它们首尾相连，形成 Chord 环。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://hi.csdn.net/attachment/201012/7/411087_12917375694L1p.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-2-查找算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-查找算法"}},[t._v("#")]),t._v(" 2.2 查找算法")]),t._v(" "),s("p",[t._v("显然任何查找只需要绕 Chord 环一圈即可完成，此时时间复杂度为 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("N")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(N)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("，这对于一个上百万节点，而且节点随时处于动态变化中的 P2P 网络是不可承受的，所以 Chord 提出如下的非线性查找算法：")]),t._v(" "),s("ol",[s("li",[t._v("每个节点维护一个 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("m")])])])]),t._v(" 个其他节点信息的查询表，（"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("m")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("m")])])])]),t._v(" 为位数，Chord 中为 160，表格中的节点的 ID 间距为 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("i")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^i")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.824664em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.824664em"}},[s("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathnormal mtight"},[t._v("i")])])])])])])])])])])]),t._v("，这样实际形成了一个二分查找所需要的查找关系表")]),t._v(" "),s("li",[t._v("查询时，查询节点将请求发送到与键值最接近的节点上，收到请求的节点如果存储了信息，则返回；否则，按照查询表将请求转发到与键值最接近的节点上；直到找到相应节点为止。")])]),t._v(" "),s("p",[t._v("由于节点的查询表采用的是二分查找式的分布方式，不难看出，查询过程实际上就是二分查找的过程。")]),t._v(" "),s("p",[t._v("经过优化，Chord 查询所需的跳数由 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("N")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(N)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 下降为 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("N")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(logN)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),s("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优点"}},[t._v("#")]),t._v(" 2.3 优点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("负载均衡")]),t._v(" "),s("blockquote",[s("p",[t._v("所有的节点都以同样的几率负担系统负荷，从而可以避免某些节点负载过大。")])])]),t._v(" "),s("li",[s("p",[t._v("分布性")]),t._v(" "),s("blockquote",[s("p",[t._v("所有的节点平等的完成同样的工作，所以 Chord 具有比较高的健壮性，能抵御 DoS 攻击")])])]),t._v(" "),s("li",[s("p",[t._v("可扩展性")]),t._v(" "),s("blockquote",[s("p",[t._v("Chord 的系统开销按照 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("N")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(logN)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 增加，增加比例不大，因此它可以用于较大规模的系统")])])]),t._v(" "),s("li",[s("p",[t._v("可用性")]),t._v(" "),s("blockquote",[s("p",[t._v("Chord 可以根据网络的变化更新查询表，及时恢复查找关系，使得查询可以可靠进行")])])]),t._v(" "),s("li",[s("p",[t._v("灵活性")]),t._v(" "),s("blockquote",[s("p",[t._v("Chord 并未限制查询的内容结构，因此应用层可以灵活的将内容映射到键值空间，而不用受到协议的限制。")])])])]),t._v(" "),s("h2",{attrs:{id:"_3-can-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-can-算法"}},[t._v("#")]),t._v(" 3. CAN 算法")]),t._v(" "),s("p",[t._v("CAN 是 2001 年由加州大学伯克利分校提出的。与 Chord 一样，也是 DHT 的一种实现形式。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-哈希算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-哈希算法"}},[t._v("#")]),t._v(" 3.1 哈希算法")]),t._v(" "),s("p",[t._v("在 CAN 中，每个节点自身的 ID 经过哈希后，能得到一个 d 维向量，所以整个 P2P 系统将被映射到一个 d 维的笛卡尔空间去。而 Chord 使用的 SHA-1 算法生成的结果是一维的。")]),t._v(" "),s("blockquote",[s("p",[t._v("其中 d 为一个系统决定的常量")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-查找算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-查找算法"}},[t._v("#")]),t._v(" 3.2 查找算法")]),t._v(" "),s("p",[t._v("CAN 的节点通过维护一个相邻节点表来进行非线性搜索。\n与 Chord 不同的是，CAN 不要求查询表的邻居节点保持 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msup",[s("mn",[t._v("2")]),s("mi",[t._v("i")])],1)],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("2^i")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.824664em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.824664em"}},[s("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathnormal mtight"},[t._v("i")])])])])])])])])])])]),t._v(" 的关系，而采用笛卡尔空间的相邻定义：")]),t._v(" "),s("blockquote",[s("p",[t._v("在 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("d")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("d")])])])]),t._v(" 维笛卡尔空间中，2个节点的 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("d")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("d")])])])]),t._v(" 维坐标中有 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("d")]),s("mo",[t._v("−")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d-1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.77777em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("d")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("1")])])])]),t._v(" 维是相等的，剩余的一维是相邻的节点称之为相邻节点。")])]),t._v(" "),s("p",[t._v("在查询的过程中，查询节点首先计算出被查询内容的键值 (d 维向量)，然后在节点列表中查找与之最近的相邻节点，向其发送查询请求；如果被查询节点包含资源，则返回；否则，被查询节点就根据查询表转发到相应最近节点，直到查询完毕为止。")]),t._v(" "),s("p",[t._v("如果相邻节点表中没有可用的下一跳节点，则开始进行扩展环搜索（从最近的n个节点开始，层层转发直到找到目标或超出了跳数的上限为止），直到找到可用节点。")]),t._v(" "),s("p",[t._v("经过CAN的优化后，查询需要的跳数由 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("N")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O (N)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 减少到均值为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("d")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mn",[t._v("4")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("n")]),s("mn",[t._v("1")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mi",[t._v("d")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("(d/4)(n1/d)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal"},[t._v("d")]),s("span",{staticClass:"mord"},[t._v("/4")]),s("span",{staticClass:"mclose"},[t._v(")")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal"},[t._v("n")]),s("span",{staticClass:"mord"},[t._v("1/")]),s("span",{staticClass:"mord mathnormal"},[t._v("d")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 的随机制，考虑到 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("d")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("d")])])])]),t._v(" 为常数，这一值可以表示为"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("O")]),s("mo",{attrs:{stretchy:"false"}},[t._v("(")]),s("mi",[t._v("n")]),s("mn",[t._v("1")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),s("mi",[t._v("d")]),s("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n1/ d)")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),s("span",{staticClass:"mopen"},[t._v("(")]),s("span",{staticClass:"mord mathnormal"},[t._v("n")]),s("span",{staticClass:"mord"},[t._v("1/")]),s("span",{staticClass:"mord mathnormal"},[t._v("d")]),s("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_3-3-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-比较"}},[t._v("#")]),t._v(" 3.3 比较")]),t._v(" "),s("p",[t._v("CAN 和 Chord 的主要区别在于查找算法不同。")]),t._v(" "),s("p",[t._v("相比之下，在节点数量非常大时，CAN 的平均查询跳数要比 Chord 增加得更快。")]),t._v(" "),s("p",[t._v("而且 CAN 查询过程中需要的运算量也要高于 Chord 。但 CAN 使用的 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("d")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("d")])])])]),t._v(" 为预先设置的常量，因此并不假设系统节点数量。")]),t._v(" "),s("p",[t._v("但是在节点总数动态变化范围很大的系统中，CAN 的相邻节点表结构保持稳定，这在 P2P 这一时常在变化的网络系统中有很大优点。")]),t._v(" "),s("h2",{attrs:{id:"_4-pastry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pastry"}},[t._v("#")]),t._v(" 4. Pastry")]),t._v(" "),s("p",[t._v("Pastry 于 2001 年位于英国剑桥的微软研究院和莱斯(Rice)大学提出。")]),t._v(" "),s("h3",{attrs:{id:"_4-1-哈希算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-哈希算法"}},[t._v("#")]),t._v(" 4.1 哈希算法")]),t._v(" "),s("p",[t._v("在 Pastry 中，每个节点拥有一个 128 bit 的标识，为了保证 ID 的一致性，一般采用节点的 IP 地址进行哈希计算。")]),t._v(" "),s("p",[t._v("Pastry 并没有规定应该使用何种哈希算法，而只规定了哈希键值为一维。（实际上则是使用了 128 bit 的整数空间）")]),t._v(" "),s("h3",{attrs:{id:"_4-2-查找算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-查找算法"}},[t._v("#")]),t._v(" 4.2 查找算法")]),t._v(" "),s("p",[t._v("在 Pastry 中，每个节点拥有一个路由表 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("R")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("R")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.00773em"}},[t._v("R")])])])]),t._v("，一个邻居节点表 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("M")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("M")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")])])])]),t._v("，和一个叶子节点表 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("L")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("L")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal"},[t._v("L")])])])]),t._v("，它们一起构成了节点的状态表。")]),t._v(" "),s("p",[t._v("路由表 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("R")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("R")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.00773em"}},[t._v("R")])])])]),t._v(" 共有 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("B")]),s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("logBN")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("BN")])])])]),t._v(" 行，其中，"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("B")]),s("mo",[t._v("=")]),s("mn",[t._v("2")]),s("mi",[t._v("b")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("B = 2b")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05017em"}},[t._v("B")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"mord mathnormal"},[t._v("b")])])])]),t._v(" 为系统参数，"),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("N")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v(" 为节点的总数。每行包括 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("B")]),s("mo",[t._v("−")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("B - 1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05017em"}},[t._v("B")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("1")])])])]),t._v(" 个项，每个项记录了一个邻居节点的信息。")]),t._v(" "),s("p",[t._v("叶子节点表存放的是在空间中与当前节点最近的 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),s("mi",[t._v("L")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("|L|")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord"},[t._v("∣")]),s("span",{staticClass:"mord mathnormal"},[t._v("L")]),s("span",{staticClass:"mord"},[t._v("∣")])])])]),t._v(" 个节点的信息；\n其中，一半节点的标识大于当前节点，另一半小于当前节点。\n一般取 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),s("mi",[t._v("L")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),s("mo",[t._v("=")]),s("mn",[t._v("2")]),s("mi",[t._v("b")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("|L| = 2b")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord"},[t._v("∣")]),s("span",{staticClass:"mord mathnormal"},[t._v("L")]),s("span",{staticClass:"mord"},[t._v("∣")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[t._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("2")]),s("span",{staticClass:"mord mathnormal"},[t._v("b")])])])]),t._v(" 或者 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mn",[t._v("4")]),s("mi",[t._v("b")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("4b")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("4")]),s("span",{staticClass:"mord mathnormal"},[t._v("b")])])])]),t._v("。")]),t._v(" "),s("p",[t._v("邻居节点存放着在 "),s("strong",[t._v("真实网络")]),t._v(" 中与当前节点最近的 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),s("mi",[t._v("M")]),s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("|M|")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord"},[t._v("∣")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),s("span",{staticClass:"mord"},[t._v("∣")])])])]),t._v(" 个相邻节点的信息。距离在这里的定义指的是由多种因素综合得到的转发开销。")]),t._v(" "),s("p",[t._v("Pastry 并未提供距离节点的获取方法，而是由应用层来进行相邻节点的配置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i2.read01.com/image.php?url=0DtV0ja4Qk",alt:"enter image description here"}})]),t._v(" "),s("p",[t._v("具体的查找过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("首先，节点获取到被查询对象的 ID 后，检查 ID 是否在叶子节点的范围内")]),t._v(" "),s("li",[t._v("如果不在，则从路由表中按照最长前缀优先原则查找一个转发节点")]),t._v(" "),s("li",[t._v("如果不存在这样的节点，则从所有邻居节点集合（包括路由表中的子叶子表和邻居节点表）选择最近的节点进行消息转发，直到查询完毕为止。")])]),t._v(" "),s("p",[t._v("从过程中看，如果路由表不为空，则每步查找至少能夠增加一個前綴匹配数位，所以在路由表始终有效时，步数最多为 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("B")]),s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("logBN")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("BN")])])])])]),t._v(" "),s("h3",{attrs:{id:"_4-3-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-比较"}},[t._v("#")]),t._v(" 4.3 比较")]),t._v(" "),s("p",[t._v("Pastry的查找利用了成熟的最大掩码匹配算法，因此实现时可以利用很多现成的软件算法和硬件框架，可以获得很好的效率。")]),t._v(" "),s("p",[t._v("与 Chord 和 CAN 相比，Pastry 引入了叶子节点和邻居节点集合的概念。")]),t._v(" "),s("p",[t._v("在应用层能够及时准确地获得这两个集合的节点信息时，可以大大加快查找查找的速度，同时降低因查找引起的网络传输开销；")]),t._v(" "),s("p",[t._v("不过在动态变化的 P2P 网络中如何理想地做到这一点有很大的难度。")])])}),[],!1,null,null,null);a.default=n.exports}}]);