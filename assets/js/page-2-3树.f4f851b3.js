(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{844:function(t,a,s){"use strict";s.r(a);var i=s(1),e=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[t._v("#")]),t._v(" 1.  介绍")]),t._v(" "),s("p",[t._v("2-3 树是一种平衡二叉树，具有自动平衡能力")]),t._v(" "),s("p",[t._v("2-3 树是一种拥有 2 种不同节点的树，称为 2-节点 和 3-节点")]),t._v(" "),s("ol",[s("li",[t._v("2-节点，拥有"),s("strong",[t._v("一个键值")]),t._v("和"),s("strong",[t._v("两个链接")]),t._v("（左子树和右子树），实际上就是普通的二叉搜索树节点")]),t._v(" "),s("li",[t._v("3-节点，拥有"),s("strong",[t._v("两个键值")]),t._v("和"),s("strong",[t._v("三个链接")]),t._v("，左子结点比最小的键值小，右子结点比最大的键值大，中子节点介于两者之间")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://algs4.cs.princeton.edu/33balanced/images/23tree-anatomy.png",alt:"2-3 Tree"}})]),t._v(" "),s("h2",{attrs:{id:"_2-搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-搜索"}},[t._v("#")]),t._v(" 2. 搜索")]),t._v(" "),s("p",[t._v("2-3 树的搜索和 BST 一样，根据比较结果来进入子树进行搜索。")]),t._v(" "),s("h2",{attrs:{id:"_3-插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-插入"}},[t._v("#")]),t._v(" 3. 插入")]),t._v(" "),s("p",[t._v("2-3 树的插入稍微有些复杂，我们分情况来讨论。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-在-2-节点-中插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-在-2-节点-中插入"}},[t._v("#")]),t._v(" 3.1 在 2-节点 中插入")]),t._v(" "),s("p",[t._v("这是最简单的一种情况，只需"),s("strong",[t._v("将 2-节点 变为 3-节点")]),t._v("即可。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://algs4.cs.princeton.edu/33balanced/images/23tree-insert2.png",alt:"Insert 2-node"}})]),t._v(" "),s("h3",{attrs:{id:"_3-2-在只有-3-节点的树中插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-在只有-3-节点的树中插入"}},[t._v("#")]),t._v(" 3.2 在只有 3-节点的树中插入")]),t._v(" "),s("p",[t._v("在这种情况下，我们可以构建一个暂时的 4-节点，然后将其"),s("strong",[t._v("分裂")]),t._v("为"),s("strong",[t._v("三个 2-节点")]),t._v("。")]),t._v(" "),s("p",[t._v("这个操作会增加树的高度")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://algs4.cs.princeton.edu/33balanced/images/23tree-insert3a.png",alt:"Insert only 3-node"}})]),t._v(" "),s("h3",{attrs:{id:"_3-3-在父节点为-2-节点-的-23-节点-插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-在父节点为-2-节点-的-23-节点-插入"}},[t._v("#")]),t._v(" 3.3 在父节点为 2-节点 的 23-节点 插入")]),t._v(" "),s("p",[t._v("这种情况就更加复杂了，此时，我们 "),s("strong",[t._v("将 3-节点 变为临时的 4-节点，然后将其分裂。")])]),t._v(" "),s("p",[t._v("分裂 4-节点 时，将中间节点向上传递到父节点中，将剩下的两个节点作为 2-节点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://algs4.cs.princeton.edu/33balanced/images/23tree-insert3b.png",alt:"Insert 3-node with the 2-node father"}})]),t._v(" "),s("h3",{attrs:{id:"_3-4-在父节点为-3-节点-的-3-节点-插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-在父节点为-3-节点-的-3-节点-插入"}},[t._v("#")]),t._v(" 3.4 在父节点为 3-节点 的 3-节点 插入")]),t._v(" "),s("p",[t._v("这种情况和上一个稍微有点像，我们只需要将 3-节点 替换为临时的 4-节点，然后"),s("strong",[t._v("将其分裂")]),t._v("。此时"),s("strong",[t._v("父节点成为 4-节点")]),t._v("，所以我们"),s("strong",[t._v("递归地")]),t._v("进行分裂操作，直到到达根节点位置。")]),t._v(" "),s("p",[s("strong",[t._v("如果根节点仍然是 4-节点，那么我们就将根节点分裂，增加树的高度。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://algs4.cs.princeton.edu/33balanced/images/23tree-split.png",alt:"Insert into 3-node with 3-node father and reach root"}})]),t._v(" "),s("h2",{attrs:{id:"_4-性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-性能"}},[t._v("#")]),t._v(" 4. 性能")]),t._v(" "),s("p",[t._v("2-3 树能保证 2-节点 的完美平衡，在 BST 中，操作时间复杂度和树的高度成对数关系，所以：")]),t._v(" "),s("p",[t._v("2-3 树能保证任何的相关操作均在对数级别；")]),t._v(" "),s("p",[t._v("在最坏情况下，当所有的节点都是 2-节点 时，2-3 树的性能是 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("msub",[s("mi",[t._v("g")]),s("mn",[t._v("2")])],1),s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("log_2N")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.03588em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("2")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v(" 级别；")]),t._v(" "),s("p",[t._v("在最好情况下，当所有的节点都是 3-节点时，2-3 树的性能是 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("msub",[s("mi",[t._v("g")]),s("mn",[t._v("3")])],1),s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("log_3N")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.03588em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[t._v("3")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v(" 级别")]),t._v(" "),s("blockquote",[s("p",[t._v("在一个 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("N")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v(" 个节点的 2-3 树，搜索和插入只需要访问不超过 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("l")]),s("mi",[t._v("o")]),s("mi",[t._v("g")]),s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("logN")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mord mathnormal"},[t._v("o")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])]),t._v(" 个节点。")])]),t._v(" "),s("h2",{attrs:{id:"_5-结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-结论"}},[t._v("#")]),t._v(" 5. 结论")]),t._v(" "),s("p",[t._v("2-3 树能保证树在插入时的"),s("strong",[t._v("完美 2-节点 平衡")]),t._v("，不会出现 BST 的最坏情况。")]),t._v(" "),s("p",[t._v("然而，2-3 树十分难以实现，在实际工程中，我们需要对代码尽量小的改动，从而达到性能优化的结果。")])])}),[],!1,null,null,null);a.default=e.exports}}]);