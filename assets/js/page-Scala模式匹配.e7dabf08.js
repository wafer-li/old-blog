(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{828:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("模式匹配，是 Scala 相比 Java 在类型上的一个很好地改进；")]),s._v(" "),a("p",[s._v("通过引入模式匹配，消除了 Java 中常见的类型检测和强制转换(cast)；")]),s._v(" "),a("p",[s._v("拥有更高的安全性")]),s._v(" "),a("h2",{attrs:{id:"_1-问题背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-问题背景"}},[s._v("#")]),s._v(" 1. 问题背景")]),s._v(" "),a("p",[s._v("模式匹配主要解决的问题就是一个树状的类型依赖图；")]),s._v(" "),a("p",[s._v("比如算数表达式，由文法可知，它是具有树状依赖关系的：")]),s._v(" "),a("p",{staticClass:"katex-block"},[a("span",{staticClass:"katex-display"},[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[a("semantics",[a("mtable",{attrs:{rowspacing:"0.2500em",columnalign:"right left",columnspacing:"0em"}},[a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mi",[s._v("E")])],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mo",[s._v("→")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mi",[s._v("E")]),a("mo",[s._v("+")]),a("mi",[s._v("E")]),a("mtext"),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mi",[s._v("E")]),a("mo",[s._v("−")]),a("mi",[s._v("E")]),a("mtext"),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mi",[s._v("E")]),a("mo",[s._v("∗")]),a("mi",[s._v("E")]),a("mtext"),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mi",[s._v("E")]),a("mi",{attrs:{mathvariant:"normal"}},[s._v("/")]),a("mi",[s._v("E")]),a("mtext"),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mo",{attrs:{stretchy:"false"}},[s._v("(")]),a("mi",[s._v("E")]),a("mo",{attrs:{stretchy:"false"}},[s._v(")")]),a("mtext"),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")])],1)],1)],1)],1),a("mtr",[a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow")],1)],1),a("mtd",[a("mstyle",{attrs:{scriptlevel:"0",displaystyle:"true"}},[a("mrow",[a("mrow"),a("mi",[s._v("i")])],1)],1)],1)],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\\begin{aligned}\nE & \\rightarrow \\\\\n& E+E \\ | \\\\\n& E-E \\ | \\\\\n& E*E \\ | \\\\\n& E/E \\ | \\\\\n& (E) \\ | \\\\\n&  i\n\\end{aligned}\n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"10.500000000000004em","vertical-align":"-5.000000000000002em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mtable"},[a("span",{staticClass:"col-align-r"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"5.500000000000001em"}},[a("span",{staticStyle:{top:"-7.660000000000001em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")])])]),a("span",{staticStyle:{top:"-6.16em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})]),a("span",{staticStyle:{top:"-4.659999999999999em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})]),a("span",{staticStyle:{top:"-3.1599999999999993em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})]),a("span",{staticStyle:{top:"-1.6599999999999993em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})]),a("span",{staticStyle:{top:"-0.15999999999999837em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})]),a("span",{staticStyle:{top:"1.3400000000000016em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"})])]),a("span",{staticClass:"vlist-s"},[s._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"5.000000000000002em"}},[a("span")])])])]),a("span",{staticClass:"col-align-l"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"5.500000000000001em"}},[a("span",{staticStyle:{top:"-7.660000000000001em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[s._v("→")])])]),a("span",{staticStyle:{top:"-6.16em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace"}),a("span",{staticClass:"mord"},[s._v("∣")])])]),a("span",{staticStyle:{top:"-4.659999999999999em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("−")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace"}),a("span",{staticClass:"mord"},[s._v("∣")])])]),a("span",{staticStyle:{top:"-3.1599999999999993em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace"}),a("span",{staticClass:"mord"},[s._v("∣")])])]),a("span",{staticStyle:{top:"-1.6599999999999993em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mord"},[s._v("/")]),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mspace"}),a("span",{staticClass:"mord"},[s._v("∣")])])]),a("span",{staticStyle:{top:"-0.15999999999999837em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.05764em"}},[s._v("E")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mspace"}),a("span",{staticClass:"mord"},[s._v("∣")])])]),a("span",{staticStyle:{top:"1.3400000000000016em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"}),a("span",{staticClass:"mord mathnormal"},[s._v("i")])])])]),a("span",{staticClass:"vlist-s"},[s._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"5.000000000000002em"}},[a("span")])])])])])])])])])])]),s._v(" "),a("p",[s._v("所以，我们可以使用如下的类来表示一个算术表达式：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" Expr\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("leftOp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rightOp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("那么当我们需要使用类似 "),a("code",[s._v("eval()")]),s._v(" 的方法时，该如何实现这个方法呢？")]),s._v(" "),a("h2",{attrs:{id:"_2-各有缺陷的解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-各有缺陷的解法"}},[s._v("#")]),s._v(" 2. 各有缺陷的解法")]),s._v(" "),a("h3",{attrs:{id:"_2-1-使用类型说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-使用类型说明"}},[s._v("#")]),s._v(" 2.1 使用类型说明")]),s._v(" "),a("p",[s._v("一个暴力解决的思路就是为 "),a("code",[s._v("Expr")]),s._v(" 添加上一个类型的说明，即：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" Expr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" isNumber"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Boolean")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" isSum"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Boolean")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("不过，随着以后算术表达式的种类越来越多，比如加入了乘法和除法；")]),s._v(" "),a("p",[s._v("那么，这个实现会导致方法数的平方级别爆炸。")]),s._v(" "),a("blockquote",[a("p",[s._v("每增加一个种类，都需要对现有的所有类进行方法的增加")])]),s._v(" "),a("p",[s._v("显然，使用类型说明(classification) 是不行的。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-类型检测和造型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-类型检测和造型"}},[s._v("#")]),s._v(" 2.2 类型检测和造型")]),s._v(" "),a("p",[s._v("Java 这门面向对象语言对此则有比较好的解法：")]),s._v(" "),a("p",[s._v("通过对对象进行类型检测和强制转换(cast)；")]),s._v(" "),a("p",[s._v("由于强制转换后类型得到限定，所以就可以分别进行检测工作：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Expr")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("相对的，Scala 也具有这种语法特性：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isInstanceOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asInstanceOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("numberValue\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isInstanceOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asInstanceOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        eval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("leftOp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rightOp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("不过，这种方法由于是比较低层级的，具有指令性特征；")]),s._v(" "),a("p",[s._v("同时，过多的类型检测和强制转换也造成了诸多不安全因素：")]),s._v(" "),a("p",[s._v("如果运行时类型改变了，那么很可能会出现异常。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-面向对象的解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-面向对象的解法"}},[s._v("#")]),s._v(" 2.3 面向对象的解法")]),s._v(" "),a("p",[s._v("现在我们来选择一个更高级的解决办法，通过利用多态特性，来解决此类问题。")]),s._v(" "),a("p",[s._v("相比将 "),a("code",[s._v("eval()")]),s._v(" 作为一个外部的函数，不如将其作为类的一个内部方法：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" Expr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("leftOp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rightOp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" leftOp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" rightOp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("通过语言自带的多态特性，我们可以使用到具体的 "),a("code",[s._v("eval()")]),s._v("；")]),s._v(" "),a("p",[s._v("这样就能很优雅的解决上面的问题；")]),s._v(" "),a("p",[s._v("不过，这种写法有个缺陷；")]),s._v(" "),a("p",[s._v("如果我们需要添加一个新的方法，例如 "),a("code",[s._v("show()")]),s._v("，则需要更改所有的现存类；")]),s._v(" "),a("p",[s._v("而且，如果我们需要一个化简操作，它不能仅仅只考虑一个节点，而需要多个节点综合考虑；")]),s._v(" "),a("p",[s._v("这样，我们可以发现，即使使用多态，也没能解决我们所有的问题")]),s._v(" "),a("h2",{attrs:{id:"_3-模式匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-模式匹配"}},[s._v("#")]),s._v(" 3. 模式匹配")]),s._v(" "),a("p",[s._v("在 Scala 中，具有一个很常用的语法用于解决这类问题，即 "),a("strong",[s._v("模式匹配")]),s._v("；")]),s._v(" "),a("p",[s._v("模式匹配使用 "),a("code",[s._v("match")]),s._v(" 定义：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" anotherE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" anotherE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Ignore")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("code",[s._v("match")]),s._v(" 语句块中，包含多个 "),a("code",[s._v("case")]),s._v("  语句；")]),s._v(" "),a("p",[s._v("每个 "),a("code",[s._v("case")]),s._v(" 语句包括："),a("code",[s._v("case")]),s._v(" 关键字，模式和表达式，模式和表达式使用 "),a("code",[s._v("=>")]),s._v(" 分隔。")]),s._v(" "),a("p",[s._v("乍一看，这个语法和 C++/Java 中的 "),a("code",[s._v("switch")]),s._v(" 很像；")]),s._v(" "),a("p",[s._v("不过，它进行了大幅度的强化，主要就是放宽了对选择器的限制：")]),s._v(" "),a("p",[s._v("现在 "),a("code",[s._v("case")]),s._v(" 语句可以是：")]),s._v(" "),a("ol",[a("li",[s._v("构造器")]),s._v(" "),a("li",[s._v("变量")]),s._v(" "),a("li",[s._v("常量")]),s._v(" "),a("li",[s._v("通配符 "),a("code",[s._v("_")])])]),s._v(" "),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("构造器必须是 "),a("code",[s._v("case class")])]),s._v(" "),a("li",[s._v("变量必须以小写字母开头")]),s._v(" "),a("li",[s._v("常量必须以大写字母开头")])]),s._v(" "),a("h2",{attrs:{id:"_4-匹配处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-匹配处理"}},[s._v("#")]),s._v(" 4. 匹配处理")]),s._v(" "),a("p",[s._v("首先，如果没有 "),a("code",[s._v("case")]),s._v(" 能够匹配选择器，则会抛出异常。")]),s._v(" "),a("p",[s._v("然后，如果匹配成功，会将 "),a("strong",[s._v("整个 "),a("code",[s._v("match")]),s._v(" 语句")]),s._v(" 替换为 "),a("code",[s._v("case")]),s._v(" 的 right-hand side。")]),s._v(" "),a("p",[s._v("对于不同的情况，则是：")]),s._v(" "),a("ul",[a("li",[s._v("构造器，将参数绑定 "),a("code",[s._v("case")]),s._v(" 中的形参")]),s._v(" "),a("li",[s._v("变量，对变量进行赋值")]),s._v(" "),a("li",[s._v("常量，检测和常量的相等性")])]),s._v(" "),a("h2",{attrs:{id:"_5-case-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-case-class"}},[s._v("#")]),s._v(" 5. Case Class")]),s._v(" "),a("p",[s._v("Case Class 是一种特殊的类，通常用于进行模式匹配；")]),s._v(" "),a("p",[s._v("但是，它还具有一些其他的有用特性：")]),s._v(" "),a("p",[s._v("它不需要 "),a("code",[s._v("new")]),s._v(" 关键字进行构建：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hehe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("它的主要构造器参数直接可以作为类的字段：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("它的相等性判断是结构化的，当它所有的成员都相等时，它就相等，和引用无关；")]),s._v(" "),a("p",[s._v("同时还提供了 "),a("code",[s._v("toString()")]),s._v(" 方法：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" firstSms "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" secondSms "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("firstSms "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" secondSms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"They are equal!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nprintln"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SMS is: "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" firstSms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("输出：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("They are equal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nSMS is: SMS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(", Hello"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_6-模式匹配的解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-模式匹配的解决办法"}},[s._v("#")]),s._v(" 6. 模式匹配的解决办法")]),s._v(" "),a("p",[s._v("使用模式匹配，我们不仅可以对单个节点进行解析工作；")]),s._v(" "),a("p",[s._v("同时，我们还可以查看节点之间的关系：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("trait")]),s._v(" Expr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eval\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" show"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toString\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("show "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("show\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"("')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("show "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("show "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("show\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" x\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Expr\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[s._v("上面的 "),a("code",[s._v("show")]),s._v(" 方法通过查看子节点情况，实现了优先级区分:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://ww1.sinaimg.cn/large/006tNc79ly1fenynuh6prj316g09g763.jpg",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_7-和多态方法的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-和多态方法的区别"}},[s._v("#")]),s._v(" 7. 和多态方法的区别")]),s._v(" "),a("p",[s._v("那么模式匹配相比面向对象方法有什么优势呢？")]),s._v(" "),a("p",[s._v("如果你倾向于在现有的类架构上添加 "),a("strong",[s._v("通用的方法")]),s._v("，那么采用模式匹配会更好；")]),s._v(" "),a("p",[s._v("因为模式匹配只需要修改匹配代码，而不需要在各个子类重新实现方法。")]),s._v(" "),a("p",[s._v("但是，如果你倾向于增加子类，而不是增加通用的处理方法，那么采用多态方法会更好；")]),s._v(" "),a("p",[s._v("原因是采用多态架构只需要建立一个子类，而重载方法这些繁琐工作 IDE 会帮你做好；")]),s._v(" "),a("p",[s._v("而模式匹配还需要在顶层代码中进行修改")])])}),[],!1,null,null,null);t.default=e.exports}}]);